{"version":3,"file":"socket__io-client.js","names":["withNativeBlob","withNativeArrayBuffer","isView","lookup","decode","withNativeArrayBuffer","decode","isBinary","protocol","on","globalThis","_a","globalThis","globalThis","value","protocol","Socket","DEFAULT_TRANSPORTS","_a","protocol","Socket","RESERVED_EVENTS","value","self","parser","Engine","self"],"sources":["../../engine.io-parser/build/esm/commons.js","../../engine.io-parser/build/esm/encodePacket.browser.js","../../engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../engine.io-parser/build/esm/decodePacket.browser.js","../../engine.io-parser/build/esm/index.js","../../@socket.io/component-emitter/lib/esm/index.js","../../engine.io-client/build/esm/globals.js","../../engine.io-client/build/esm/util.js","../../engine.io-client/build/esm/contrib/parseqs.js","../../engine.io-client/build/esm/transport.js","../../engine.io-client/build/esm/transports/polling.js","../../engine.io-client/build/esm/contrib/has-cors.js","../../engine.io-client/build/esm/transports/polling-xhr.js","../../engine.io-client/build/esm/transports/websocket.js","../../engine.io-client/build/esm/transports/webtransport.js","../../engine.io-client/build/esm/transports/index.js","../../engine.io-client/build/esm/contrib/parseuri.js","../../engine.io-client/build/esm/socket.js","../../engine.io-client/build/esm/transports/polling-fetch.js","../../engine.io-client/build/esm/index.js","../../socket.io-client/build/esm/url.js","../../socket.io-parser/build/esm/is-binary.js","../../socket.io-parser/build/esm/binary.js","../../socket.io-parser/build/esm/index.js","../../socket.io-client/build/esm/on.js","../../socket.io-client/build/esm/socket.js","../../socket.io-client/build/esm/contrib/backo2.js","../../socket.io-client/build/esm/manager.js","../../socket.io-client/build/esm/index.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\r\nPACKET_TYPES[\"open\"] = \"0\";\r\nPACKET_TYPES[\"close\"] = \"1\";\r\nPACKET_TYPES[\"ping\"] = \"2\";\r\nPACKET_TYPES[\"pong\"] = \"3\";\r\nPACKET_TYPES[\"message\"] = \"4\";\r\nPACKET_TYPES[\"upgrade\"] = \"5\";\r\nPACKET_TYPES[\"noop\"] = \"6\";\r\nconst PACKET_TYPES_REVERSE = Object.create(null);\r\nObject.keys(PACKET_TYPES).forEach((key) => {\r\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\r\n});\r\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\r\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\r\n","import { PACKET_TYPES } from \"./commons.js\";\r\nconst withNativeBlob = typeof Blob === \"function\" ||\r\n    (typeof Blob !== \"undefined\" &&\r\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\r\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\r\n// ArrayBuffer.isView method is not defined in IE10\r\nconst isView = (obj) => {\r\n    return typeof ArrayBuffer.isView === \"function\"\r\n        ? ArrayBuffer.isView(obj)\r\n        : obj && obj.buffer instanceof ArrayBuffer;\r\n};\r\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\r\n    if (withNativeBlob && data instanceof Blob) {\r\n        if (supportsBinary) {\r\n            return callback(data);\r\n        }\r\n        else {\r\n            return encodeBlobAsBase64(data, callback);\r\n        }\r\n    }\r\n    else if (withNativeArrayBuffer &&\r\n        (data instanceof ArrayBuffer || isView(data))) {\r\n        if (supportsBinary) {\r\n            return callback(data);\r\n        }\r\n        else {\r\n            return encodeBlobAsBase64(new Blob([data]), callback);\r\n        }\r\n    }\r\n    // plain string\r\n    return callback(PACKET_TYPES[type] + (data || \"\"));\r\n};\r\nconst encodeBlobAsBase64 = (data, callback) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = function () {\r\n        const content = fileReader.result.split(\",\")[1];\r\n        callback(\"b\" + (content || \"\"));\r\n    };\r\n    return fileReader.readAsDataURL(data);\r\n};\r\nfunction toArray(data) {\r\n    if (data instanceof Uint8Array) {\r\n        return data;\r\n    }\r\n    else if (data instanceof ArrayBuffer) {\r\n        return new Uint8Array(data);\r\n    }\r\n    else {\r\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\r\n    }\r\n}\r\nlet TEXT_ENCODER;\r\nexport function encodePacketToBinary(packet, callback) {\r\n    if (withNativeBlob && packet.data instanceof Blob) {\r\n        return packet.data.arrayBuffer().then(toArray).then(callback);\r\n    }\r\n    else if (withNativeArrayBuffer &&\r\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\r\n        return callback(toArray(packet.data));\r\n    }\r\n    encodePacket(packet, false, (encoded) => {\r\n        if (!TEXT_ENCODER) {\r\n            TEXT_ENCODER = new TextEncoder();\r\n        }\r\n        callback(TEXT_ENCODER.encode(encoded));\r\n    });\r\n}\r\nexport { encodePacket };\r\n","// imported from https://github.com/socketio/base64-arraybuffer\r\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n// Use a lookup table to find the index.\r\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\r\nfor (let i = 0; i < chars.length; i++) {\r\n    lookup[chars.charCodeAt(i)] = i;\r\n}\r\nexport const encode = (arraybuffer) => {\r\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\r\n    for (i = 0; i < len; i += 3) {\r\n        base64 += chars[bytes[i] >> 2];\r\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n        base64 += chars[bytes[i + 2] & 63];\r\n    }\r\n    if (len % 3 === 2) {\r\n        base64 = base64.substring(0, base64.length - 1) + '=';\r\n    }\r\n    else if (len % 3 === 1) {\r\n        base64 = base64.substring(0, base64.length - 2) + '==';\r\n    }\r\n    return base64;\r\n};\r\nexport const decode = (base64) => {\r\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\r\n    if (base64[base64.length - 1] === '=') {\r\n        bufferLength--;\r\n        if (base64[base64.length - 2] === '=') {\r\n            bufferLength--;\r\n        }\r\n    }\r\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\r\n    for (i = 0; i < len; i += 4) {\r\n        encoded1 = lookup[base64.charCodeAt(i)];\r\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\r\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\r\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\r\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n    }\r\n    return arraybuffer;\r\n};\r\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\r\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\r\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\r\nexport const decodePacket = (encodedPacket, binaryType) => {\r\n    if (typeof encodedPacket !== \"string\") {\r\n        return {\r\n            type: \"message\",\r\n            data: mapBinary(encodedPacket, binaryType),\r\n        };\r\n    }\r\n    const type = encodedPacket.charAt(0);\r\n    if (type === \"b\") {\r\n        return {\r\n            type: \"message\",\r\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\r\n        };\r\n    }\r\n    const packetType = PACKET_TYPES_REVERSE[type];\r\n    if (!packetType) {\r\n        return ERROR_PACKET;\r\n    }\r\n    return encodedPacket.length > 1\r\n        ? {\r\n            type: PACKET_TYPES_REVERSE[type],\r\n            data: encodedPacket.substring(1),\r\n        }\r\n        : {\r\n            type: PACKET_TYPES_REVERSE[type],\r\n        };\r\n};\r\nconst decodeBase64Packet = (data, binaryType) => {\r\n    if (withNativeArrayBuffer) {\r\n        const decoded = decode(data);\r\n        return mapBinary(decoded, binaryType);\r\n    }\r\n    else {\r\n        return { base64: true, data }; // fallback for old browsers\r\n    }\r\n};\r\nconst mapBinary = (data, binaryType) => {\r\n    switch (binaryType) {\r\n        case \"blob\":\r\n            if (data instanceof Blob) {\r\n                // from WebSocket + binaryType \"blob\"\r\n                return data;\r\n            }\r\n            else {\r\n                // from HTTP long-polling or WebTransport\r\n                return new Blob([data]);\r\n            }\r\n        case \"arraybuffer\":\r\n        default:\r\n            if (data instanceof ArrayBuffer) {\r\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\r\n                return data;\r\n            }\r\n            else {\r\n                // from WebTransport (Uint8Array)\r\n                return data.buffer;\r\n            }\r\n    }\r\n};\r\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\r\nimport { decodePacket } from \"./decodePacket.js\";\r\nimport { ERROR_PACKET, } from \"./commons.js\";\r\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\r\nconst encodePayload = (packets, callback) => {\r\n    // some packets may be added to the array while encoding, so the initial length must be saved\r\n    const length = packets.length;\r\n    const encodedPackets = new Array(length);\r\n    let count = 0;\r\n    packets.forEach((packet, i) => {\r\n        // force base64 encoding for binary packets\r\n        encodePacket(packet, false, (encodedPacket) => {\r\n            encodedPackets[i] = encodedPacket;\r\n            if (++count === length) {\r\n                callback(encodedPackets.join(SEPARATOR));\r\n            }\r\n        });\r\n    });\r\n};\r\nconst decodePayload = (encodedPayload, binaryType) => {\r\n    const encodedPackets = encodedPayload.split(SEPARATOR);\r\n    const packets = [];\r\n    for (let i = 0; i < encodedPackets.length; i++) {\r\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\r\n        packets.push(decodedPacket);\r\n        if (decodedPacket.type === \"error\") {\r\n            break;\r\n        }\r\n    }\r\n    return packets;\r\n};\r\nexport function createPacketEncoderStream() {\r\n    return new TransformStream({\r\n        transform(packet, controller) {\r\n            encodePacketToBinary(packet, (encodedPacket) => {\r\n                const payloadLength = encodedPacket.length;\r\n                let header;\r\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\r\n                if (payloadLength < 126) {\r\n                    header = new Uint8Array(1);\r\n                    new DataView(header.buffer).setUint8(0, payloadLength);\r\n                }\r\n                else if (payloadLength < 65536) {\r\n                    header = new Uint8Array(3);\r\n                    const view = new DataView(header.buffer);\r\n                    view.setUint8(0, 126);\r\n                    view.setUint16(1, payloadLength);\r\n                }\r\n                else {\r\n                    header = new Uint8Array(9);\r\n                    const view = new DataView(header.buffer);\r\n                    view.setUint8(0, 127);\r\n                    view.setBigUint64(1, BigInt(payloadLength));\r\n                }\r\n                // first bit indicates whether the payload is plain text (0) or binary (1)\r\n                if (packet.data && typeof packet.data !== \"string\") {\r\n                    header[0] |= 0x80;\r\n                }\r\n                controller.enqueue(header);\r\n                controller.enqueue(encodedPacket);\r\n            });\r\n        },\r\n    });\r\n}\r\nlet TEXT_DECODER;\r\nfunction totalLength(chunks) {\r\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\r\n}\r\nfunction concatChunks(chunks, size) {\r\n    if (chunks[0].length === size) {\r\n        return chunks.shift();\r\n    }\r\n    const buffer = new Uint8Array(size);\r\n    let j = 0;\r\n    for (let i = 0; i < size; i++) {\r\n        buffer[i] = chunks[0][j++];\r\n        if (j === chunks[0].length) {\r\n            chunks.shift();\r\n            j = 0;\r\n        }\r\n    }\r\n    if (chunks.length && j < chunks[0].length) {\r\n        chunks[0] = chunks[0].slice(j);\r\n    }\r\n    return buffer;\r\n}\r\nexport function createPacketDecoderStream(maxPayload, binaryType) {\r\n    if (!TEXT_DECODER) {\r\n        TEXT_DECODER = new TextDecoder();\r\n    }\r\n    const chunks = [];\r\n    let state = 0 /* State.READ_HEADER */;\r\n    let expectedLength = -1;\r\n    let isBinary = false;\r\n    return new TransformStream({\r\n        transform(chunk, controller) {\r\n            chunks.push(chunk);\r\n            while (true) {\r\n                if (state === 0 /* State.READ_HEADER */) {\r\n                    if (totalLength(chunks) < 1) {\r\n                        break;\r\n                    }\r\n                    const header = concatChunks(chunks, 1);\r\n                    isBinary = (header[0] & 0x80) === 0x80;\r\n                    expectedLength = header[0] & 0x7f;\r\n                    if (expectedLength < 126) {\r\n                        state = 3 /* State.READ_PAYLOAD */;\r\n                    }\r\n                    else if (expectedLength === 126) {\r\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\r\n                    }\r\n                    else {\r\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\r\n                    }\r\n                }\r\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\r\n                    if (totalLength(chunks) < 2) {\r\n                        break;\r\n                    }\r\n                    const headerArray = concatChunks(chunks, 2);\r\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\r\n                    state = 3 /* State.READ_PAYLOAD */;\r\n                }\r\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\r\n                    if (totalLength(chunks) < 8) {\r\n                        break;\r\n                    }\r\n                    const headerArray = concatChunks(chunks, 8);\r\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\r\n                    const n = view.getUint32(0);\r\n                    if (n > Math.pow(2, 53 - 32) - 1) {\r\n                        // the maximum safe integer in JavaScript is 2^53 - 1\r\n                        controller.enqueue(ERROR_PACKET);\r\n                        break;\r\n                    }\r\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\r\n                    state = 3 /* State.READ_PAYLOAD */;\r\n                }\r\n                else {\r\n                    if (totalLength(chunks) < expectedLength) {\r\n                        break;\r\n                    }\r\n                    const data = concatChunks(chunks, expectedLength);\r\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\r\n                    state = 0 /* State.READ_HEADER */;\r\n                }\r\n                if (expectedLength === 0 || expectedLength > maxPayload) {\r\n                    controller.enqueue(ERROR_PACKET);\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n    });\r\n}\r\nexport const protocol = 4;\r\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\r\n","/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nexport function Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n}\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n// alias used for reserved events (protected method)\r\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","export const nextTick = (() => {\r\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\r\n    if (isPromiseAvailable) {\r\n        return (cb) => Promise.resolve().then(cb);\r\n    }\r\n    else {\r\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\r\n    }\r\n})();\r\nexport const globalThisShim = (() => {\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    else if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    else {\r\n        return Function(\"return this\")();\r\n    }\r\n})();\r\nexport const defaultBinaryType = \"arraybuffer\";\r\nexport function createCookieJar() { }\r\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\r\nexport function pick(obj, ...attr) {\r\n    return attr.reduce((acc, k) => {\r\n        if (obj.hasOwnProperty(k)) {\r\n            acc[k] = obj[k];\r\n        }\r\n        return acc;\r\n    }, {});\r\n}\r\n// Keep a reference to the real timeout functions so they can be used when overridden\r\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\r\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\r\nexport function installTimerFunctions(obj, opts) {\r\n    if (opts.useNativeTimers) {\r\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\r\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\r\n    }\r\n    else {\r\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\r\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\r\n    }\r\n}\r\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\r\nconst BASE64_OVERHEAD = 1.33;\r\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\r\nexport function byteLength(obj) {\r\n    if (typeof obj === \"string\") {\r\n        return utf8Length(obj);\r\n    }\r\n    // arraybuffer or blob\r\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\r\n}\r\nfunction utf8Length(str) {\r\n    let c = 0, length = 0;\r\n    for (let i = 0, l = str.length; i < l; i++) {\r\n        c = str.charCodeAt(i);\r\n        if (c < 0x80) {\r\n            length += 1;\r\n        }\r\n        else if (c < 0x800) {\r\n            length += 2;\r\n        }\r\n        else if (c < 0xd800 || c >= 0xe000) {\r\n            length += 3;\r\n        }\r\n        else {\r\n            i++;\r\n            length += 4;\r\n        }\r\n    }\r\n    return length;\r\n}\r\n/**\r\n * Generates a random 8-characters string.\r\n */\r\nexport function randomString() {\r\n    return (Date.now().toString(36).substring(3) +\r\n        Math.random().toString(36).substring(2, 5));\r\n}\r\n","// imported from https://github.com/galkn/querystring\r\n/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\nexport function encode(obj) {\r\n    let str = '';\r\n    for (let i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            if (str.length)\r\n                str += '&';\r\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n        }\r\n    }\r\n    return str;\r\n}\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\nexport function decode(qs) {\r\n    let qry = {};\r\n    let pairs = qs.split('&');\r\n    for (let i = 0, l = pairs.length; i < l; i++) {\r\n        let pair = pairs[i].split('=');\r\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n    }\r\n    return qry;\r\n}\r\n","import { decodePacket } from \"engine.io-parser\";\r\nimport { Emitter } from \"@socket.io/component-emitter\";\r\nimport { installTimerFunctions } from \"./util.js\";\r\nimport { encode } from \"./contrib/parseqs.js\";\r\nexport class TransportError extends Error {\r\n    constructor(reason, description, context) {\r\n        super(reason);\r\n        this.description = description;\r\n        this.context = context;\r\n        this.type = \"TransportError\";\r\n    }\r\n}\r\nexport class Transport extends Emitter {\r\n    /**\r\n     * Transport abstract constructor.\r\n     *\r\n     * @param {Object} opts - options\r\n     * @protected\r\n     */\r\n    constructor(opts) {\r\n        super();\r\n        this.writable = false;\r\n        installTimerFunctions(this, opts);\r\n        this.opts = opts;\r\n        this.query = opts.query;\r\n        this.socket = opts.socket;\r\n        this.supportsBinary = !opts.forceBase64;\r\n    }\r\n    /**\r\n     * Emits an error.\r\n     *\r\n     * @param {String} reason\r\n     * @param description\r\n     * @param context - the error context\r\n     * @return {Transport} for chaining\r\n     * @protected\r\n     */\r\n    onError(reason, description, context) {\r\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\r\n        return this;\r\n    }\r\n    /**\r\n     * Opens the transport.\r\n     */\r\n    open() {\r\n        this.readyState = \"opening\";\r\n        this.doOpen();\r\n        return this;\r\n    }\r\n    /**\r\n     * Closes the transport.\r\n     */\r\n    close() {\r\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\r\n            this.doClose();\r\n            this.onClose();\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Sends multiple packets.\r\n     *\r\n     * @param {Array} packets\r\n     */\r\n    send(packets) {\r\n        if (this.readyState === \"open\") {\r\n            this.write(packets);\r\n        }\r\n        else {\r\n            // this might happen if the transport was silently closed in the beforeunload event handler\r\n        }\r\n    }\r\n    /**\r\n     * Called upon open\r\n     *\r\n     * @protected\r\n     */\r\n    onOpen() {\r\n        this.readyState = \"open\";\r\n        this.writable = true;\r\n        super.emitReserved(\"open\");\r\n    }\r\n    /**\r\n     * Called with data.\r\n     *\r\n     * @param {String} data\r\n     * @protected\r\n     */\r\n    onData(data) {\r\n        const packet = decodePacket(data, this.socket.binaryType);\r\n        this.onPacket(packet);\r\n    }\r\n    /**\r\n     * Called with a decoded packet.\r\n     *\r\n     * @protected\r\n     */\r\n    onPacket(packet) {\r\n        super.emitReserved(\"packet\", packet);\r\n    }\r\n    /**\r\n     * Called upon close.\r\n     *\r\n     * @protected\r\n     */\r\n    onClose(details) {\r\n        this.readyState = \"closed\";\r\n        super.emitReserved(\"close\", details);\r\n    }\r\n    /**\r\n     * Pauses the transport, in order not to lose packets during an upgrade.\r\n     *\r\n     * @param onPause\r\n     */\r\n    pause(onPause) { }\r\n    createUri(schema, query = {}) {\r\n        return (schema +\r\n            \"://\" +\r\n            this._hostname() +\r\n            this._port() +\r\n            this.opts.path +\r\n            this._query(query));\r\n    }\r\n    _hostname() {\r\n        const hostname = this.opts.hostname;\r\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\r\n    }\r\n    _port() {\r\n        if (this.opts.port &&\r\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\r\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\r\n            return \":\" + this.opts.port;\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    }\r\n    _query(query) {\r\n        const encodedQuery = encode(query);\r\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\r\n    }\r\n}\r\n","import { Transport } from \"../transport.js\";\r\nimport { randomString } from \"../util.js\";\r\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\r\nexport class Polling extends Transport {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._polling = false;\r\n    }\r\n    get name() {\r\n        return \"polling\";\r\n    }\r\n    /**\r\n     * Opens the socket (triggers polling). We write a PING message to determine\r\n     * when the transport is open.\r\n     *\r\n     * @protected\r\n     */\r\n    doOpen() {\r\n        this._poll();\r\n    }\r\n    /**\r\n     * Pauses polling.\r\n     *\r\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\r\n     * @package\r\n     */\r\n    pause(onPause) {\r\n        this.readyState = \"pausing\";\r\n        const pause = () => {\r\n            this.readyState = \"paused\";\r\n            onPause();\r\n        };\r\n        if (this._polling || !this.writable) {\r\n            let total = 0;\r\n            if (this._polling) {\r\n                total++;\r\n                this.once(\"pollComplete\", function () {\r\n                    --total || pause();\r\n                });\r\n            }\r\n            if (!this.writable) {\r\n                total++;\r\n                this.once(\"drain\", function () {\r\n                    --total || pause();\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            pause();\r\n        }\r\n    }\r\n    /**\r\n     * Starts polling cycle.\r\n     *\r\n     * @private\r\n     */\r\n    _poll() {\r\n        this._polling = true;\r\n        this.doPoll();\r\n        this.emitReserved(\"poll\");\r\n    }\r\n    /**\r\n     * Overloads onData to detect payloads.\r\n     *\r\n     * @protected\r\n     */\r\n    onData(data) {\r\n        const callback = (packet) => {\r\n            // if its the first message we consider the transport open\r\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\r\n                this.onOpen();\r\n            }\r\n            // if its a close packet, we close the ongoing requests\r\n            if (\"close\" === packet.type) {\r\n                this.onClose({ description: \"transport closed by the server\" });\r\n                return false;\r\n            }\r\n            // otherwise bypass onData and handle the message\r\n            this.onPacket(packet);\r\n        };\r\n        // decode payload\r\n        decodePayload(data, this.socket.binaryType).forEach(callback);\r\n        // if an event did not trigger closing\r\n        if (\"closed\" !== this.readyState) {\r\n            // if we got data we're not polling\r\n            this._polling = false;\r\n            this.emitReserved(\"pollComplete\");\r\n            if (\"open\" === this.readyState) {\r\n                this._poll();\r\n            }\r\n            else {\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * For polling, send a close packet.\r\n     *\r\n     * @protected\r\n     */\r\n    doClose() {\r\n        const close = () => {\r\n            this.write([{ type: \"close\" }]);\r\n        };\r\n        if (\"open\" === this.readyState) {\r\n            close();\r\n        }\r\n        else {\r\n            // in case we're trying to close while\r\n            // handshaking is in progress (GH-164)\r\n            this.once(\"open\", close);\r\n        }\r\n    }\r\n    /**\r\n     * Writes a packets payload.\r\n     *\r\n     * @param {Array} packets - data packets\r\n     * @protected\r\n     */\r\n    write(packets) {\r\n        this.writable = false;\r\n        encodePayload(packets, (data) => {\r\n            this.doWrite(data, () => {\r\n                this.writable = true;\r\n                this.emitReserved(\"drain\");\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Generates uri for connection.\r\n     *\r\n     * @private\r\n     */\r\n    uri() {\r\n        const schema = this.opts.secure ? \"https\" : \"http\";\r\n        const query = this.query || {};\r\n        // cache busting is forced\r\n        if (false !== this.opts.timestampRequests) {\r\n            query[this.opts.timestampParam] = randomString();\r\n        }\r\n        if (!this.supportsBinary && !query.sid) {\r\n            query.b64 = 1;\r\n        }\r\n        return this.createUri(schema, query);\r\n    }\r\n}\r\n","// imported from https://github.com/component/has-cors\r\nlet value = false;\r\ntry {\r\n    value = typeof XMLHttpRequest !== 'undefined' &&\r\n        'withCredentials' in new XMLHttpRequest();\r\n}\r\ncatch (err) {\r\n    // if XMLHttp support is disabled in IE then it will throw\r\n    // when trying to create\r\n}\r\nexport const hasCORS = value;\r\n","import { Polling } from \"./polling.js\";\r\nimport { Emitter } from \"@socket.io/component-emitter\";\r\nimport { installTimerFunctions, pick } from \"../util.js\";\r\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\r\nimport { hasCORS } from \"../contrib/has-cors.js\";\r\nfunction empty() { }\r\nexport class BaseXHR extends Polling {\r\n    /**\r\n     * XHR Polling constructor.\r\n     *\r\n     * @param {Object} opts\r\n     * @package\r\n     */\r\n    constructor(opts) {\r\n        super(opts);\r\n        if (typeof location !== \"undefined\") {\r\n            const isSSL = \"https:\" === location.protocol;\r\n            let port = location.port;\r\n            // some user agents have empty `location.port`\r\n            if (!port) {\r\n                port = isSSL ? \"443\" : \"80\";\r\n            }\r\n            this.xd =\r\n                (typeof location !== \"undefined\" &&\r\n                    opts.hostname !== location.hostname) ||\r\n                    port !== opts.port;\r\n        }\r\n    }\r\n    /**\r\n     * Sends data.\r\n     *\r\n     * @param {String} data to send.\r\n     * @param {Function} called upon flush.\r\n     * @private\r\n     */\r\n    doWrite(data, fn) {\r\n        const req = this.request({\r\n            method: \"POST\",\r\n            data: data,\r\n        });\r\n        req.on(\"success\", fn);\r\n        req.on(\"error\", (xhrStatus, context) => {\r\n            this.onError(\"xhr post error\", xhrStatus, context);\r\n        });\r\n    }\r\n    /**\r\n     * Starts a poll cycle.\r\n     *\r\n     * @private\r\n     */\r\n    doPoll() {\r\n        const req = this.request();\r\n        req.on(\"data\", this.onData.bind(this));\r\n        req.on(\"error\", (xhrStatus, context) => {\r\n            this.onError(\"xhr poll error\", xhrStatus, context);\r\n        });\r\n        this.pollXhr = req;\r\n    }\r\n}\r\nexport class Request extends Emitter {\r\n    /**\r\n     * Request constructor\r\n     *\r\n     * @param {Object} options\r\n     * @package\r\n     */\r\n    constructor(createRequest, uri, opts) {\r\n        super();\r\n        this.createRequest = createRequest;\r\n        installTimerFunctions(this, opts);\r\n        this._opts = opts;\r\n        this._method = opts.method || \"GET\";\r\n        this._uri = uri;\r\n        this._data = undefined !== opts.data ? opts.data : null;\r\n        this._create();\r\n    }\r\n    /**\r\n     * Creates the XHR object and sends the request.\r\n     *\r\n     * @private\r\n     */\r\n    _create() {\r\n        var _a;\r\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\r\n        opts.xdomain = !!this._opts.xd;\r\n        const xhr = (this._xhr = this.createRequest(opts));\r\n        try {\r\n            xhr.open(this._method, this._uri, true);\r\n            try {\r\n                if (this._opts.extraHeaders) {\r\n                    // @ts-ignore\r\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\r\n                    for (let i in this._opts.extraHeaders) {\r\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\r\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) { }\r\n            if (\"POST\" === this._method) {\r\n                try {\r\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n                catch (e) { }\r\n            }\r\n            try {\r\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\r\n            }\r\n            catch (e) { }\r\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\r\n            // ie6 check\r\n            if (\"withCredentials\" in xhr) {\r\n                xhr.withCredentials = this._opts.withCredentials;\r\n            }\r\n            if (this._opts.requestTimeout) {\r\n                xhr.timeout = this._opts.requestTimeout;\r\n            }\r\n            xhr.onreadystatechange = () => {\r\n                var _a;\r\n                if (xhr.readyState === 3) {\r\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\r\n                    // @ts-ignore\r\n                    xhr.getResponseHeader(\"set-cookie\"));\r\n                }\r\n                if (4 !== xhr.readyState)\r\n                    return;\r\n                if (200 === xhr.status || 1223 === xhr.status) {\r\n                    this._onLoad();\r\n                }\r\n                else {\r\n                    // make sure the `error` event handler that's user-set\r\n                    // does not throw in the same tick and gets caught here\r\n                    this.setTimeoutFn(() => {\r\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\r\n                    }, 0);\r\n                }\r\n            };\r\n            xhr.send(this._data);\r\n        }\r\n        catch (e) {\r\n            // Need to defer since .create() is called directly from the constructor\r\n            // and thus the 'error' event can only be only bound *after* this exception\r\n            // occurs.  Therefore, also, we cannot throw here at all.\r\n            this.setTimeoutFn(() => {\r\n                this._onError(e);\r\n            }, 0);\r\n            return;\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            this._index = Request.requestsCount++;\r\n            Request.requests[this._index] = this;\r\n        }\r\n    }\r\n    /**\r\n     * Called upon error.\r\n     *\r\n     * @private\r\n     */\r\n    _onError(err) {\r\n        this.emitReserved(\"error\", err, this._xhr);\r\n        this._cleanup(true);\r\n    }\r\n    /**\r\n     * Cleans up house.\r\n     *\r\n     * @private\r\n     */\r\n    _cleanup(fromError) {\r\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\r\n            return;\r\n        }\r\n        this._xhr.onreadystatechange = empty;\r\n        if (fromError) {\r\n            try {\r\n                this._xhr.abort();\r\n            }\r\n            catch (e) { }\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            delete Request.requests[this._index];\r\n        }\r\n        this._xhr = null;\r\n    }\r\n    /**\r\n     * Called upon load.\r\n     *\r\n     * @private\r\n     */\r\n    _onLoad() {\r\n        const data = this._xhr.responseText;\r\n        if (data !== null) {\r\n            this.emitReserved(\"data\", data);\r\n            this.emitReserved(\"success\");\r\n            this._cleanup();\r\n        }\r\n    }\r\n    /**\r\n     * Aborts the request.\r\n     *\r\n     * @package\r\n     */\r\n    abort() {\r\n        this._cleanup();\r\n    }\r\n}\r\nRequest.requestsCount = 0;\r\nRequest.requests = {};\r\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\r\nif (typeof document !== \"undefined\") {\r\n    // @ts-ignore\r\n    if (typeof attachEvent === \"function\") {\r\n        // @ts-ignore\r\n        attachEvent(\"onunload\", unloadHandler);\r\n    }\r\n    else if (typeof addEventListener === \"function\") {\r\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\r\n        addEventListener(terminationEvent, unloadHandler, false);\r\n    }\r\n}\r\nfunction unloadHandler() {\r\n    for (let i in Request.requests) {\r\n        if (Request.requests.hasOwnProperty(i)) {\r\n            Request.requests[i].abort();\r\n        }\r\n    }\r\n}\r\nconst hasXHR2 = (function () {\r\n    const xhr = newRequest({\r\n        xdomain: false,\r\n    });\r\n    return xhr && xhr.responseType !== null;\r\n})();\r\n/**\r\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\r\n *\r\n * Usage: browser\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\r\n */\r\nexport class XHR extends BaseXHR {\r\n    constructor(opts) {\r\n        super(opts);\r\n        const forceBase64 = opts && opts.forceBase64;\r\n        this.supportsBinary = hasXHR2 && !forceBase64;\r\n    }\r\n    request(opts = {}) {\r\n        Object.assign(opts, { xd: this.xd }, this.opts);\r\n        return new Request(newRequest, this.uri(), opts);\r\n    }\r\n}\r\nfunction newRequest(opts) {\r\n    const xdomain = opts.xdomain;\r\n    // XMLHttpRequest can be disabled on IE\r\n    try {\r\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\r\n            return new XMLHttpRequest();\r\n        }\r\n    }\r\n    catch (e) { }\r\n    if (!xdomain) {\r\n        try {\r\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\r\n        }\r\n        catch (e) { }\r\n    }\r\n}\r\n","import { Transport } from \"../transport.js\";\r\nimport { pick, randomString } from \"../util.js\";\r\nimport { encodePacket } from \"engine.io-parser\";\r\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\r\n// detect ReactNative environment\r\nconst isReactNative = typeof navigator !== \"undefined\" &&\r\n    typeof navigator.product === \"string\" &&\r\n    navigator.product.toLowerCase() === \"reactnative\";\r\nexport class BaseWS extends Transport {\r\n    get name() {\r\n        return \"websocket\";\r\n    }\r\n    doOpen() {\r\n        const uri = this.uri();\r\n        const protocols = this.opts.protocols;\r\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\r\n        const opts = isReactNative\r\n            ? {}\r\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\r\n        if (this.opts.extraHeaders) {\r\n            opts.headers = this.opts.extraHeaders;\r\n        }\r\n        try {\r\n            this.ws = this.createSocket(uri, protocols, opts);\r\n        }\r\n        catch (err) {\r\n            return this.emitReserved(\"error\", err);\r\n        }\r\n        this.ws.binaryType = this.socket.binaryType;\r\n        this.addEventListeners();\r\n    }\r\n    /**\r\n     * Adds event listeners to the socket\r\n     *\r\n     * @private\r\n     */\r\n    addEventListeners() {\r\n        this.ws.onopen = () => {\r\n            if (this.opts.autoUnref) {\r\n                this.ws._socket.unref();\r\n            }\r\n            this.onOpen();\r\n        };\r\n        this.ws.onclose = (closeEvent) => this.onClose({\r\n            description: \"websocket connection closed\",\r\n            context: closeEvent,\r\n        });\r\n        this.ws.onmessage = (ev) => this.onData(ev.data);\r\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\r\n    }\r\n    write(packets) {\r\n        this.writable = false;\r\n        // encodePacket efficient as it uses WS framing\r\n        // no need for encodePayload\r\n        for (let i = 0; i < packets.length; i++) {\r\n            const packet = packets[i];\r\n            const lastPacket = i === packets.length - 1;\r\n            encodePacket(packet, this.supportsBinary, (data) => {\r\n                // Sometimes the websocket has already been closed but the browser didn't\r\n                // have a chance of informing us about it yet, in that case send will\r\n                // throw an error\r\n                try {\r\n                    this.doWrite(packet, data);\r\n                }\r\n                catch (e) {\r\n                }\r\n                if (lastPacket) {\r\n                    // fake drain\r\n                    // defer to next tick to allow Socket to clear writeBuffer\r\n                    nextTick(() => {\r\n                        this.writable = true;\r\n                        this.emitReserved(\"drain\");\r\n                    }, this.setTimeoutFn);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    doClose() {\r\n        if (typeof this.ws !== \"undefined\") {\r\n            this.ws.onerror = () => { };\r\n            this.ws.close();\r\n            this.ws = null;\r\n        }\r\n    }\r\n    /**\r\n     * Generates uri for connection.\r\n     *\r\n     * @private\r\n     */\r\n    uri() {\r\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\r\n        const query = this.query || {};\r\n        // append timestamp to URI\r\n        if (this.opts.timestampRequests) {\r\n            query[this.opts.timestampParam] = randomString();\r\n        }\r\n        // communicate binary support capabilities\r\n        if (!this.supportsBinary) {\r\n            query.b64 = 1;\r\n        }\r\n        return this.createUri(schema, query);\r\n    }\r\n}\r\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\r\n/**\r\n * WebSocket transport based on the built-in `WebSocket` object.\r\n *\r\n * Usage: browser, Node.js (since v21), Deno, Bun\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\r\n * @see https://caniuse.com/mdn-api_websocket\r\n * @see https://nodejs.org/api/globals.html#websocket\r\n */\r\nexport class WS extends BaseWS {\r\n    createSocket(uri, protocols, opts) {\r\n        return !isReactNative\r\n            ? protocols\r\n                ? new WebSocketCtor(uri, protocols)\r\n                : new WebSocketCtor(uri)\r\n            : new WebSocketCtor(uri, protocols, opts);\r\n    }\r\n    doWrite(_packet, data) {\r\n        this.ws.send(data);\r\n    }\r\n}\r\n","import { Transport } from \"../transport.js\";\r\nimport { nextTick } from \"../globals.node.js\";\r\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\r\n/**\r\n * WebTransport transport based on the built-in `WebTransport` object.\r\n *\r\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\r\n * @see https://caniuse.com/webtransport\r\n */\r\nexport class WT extends Transport {\r\n    get name() {\r\n        return \"webtransport\";\r\n    }\r\n    doOpen() {\r\n        try {\r\n            // @ts-ignore\r\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\r\n        }\r\n        catch (err) {\r\n            return this.emitReserved(\"error\", err);\r\n        }\r\n        this._transport.closed\r\n            .then(() => {\r\n            this.onClose();\r\n        })\r\n            .catch((err) => {\r\n            this.onError(\"webtransport error\", err);\r\n        });\r\n        // note: we could have used async/await, but that would require some additional polyfills\r\n        this._transport.ready.then(() => {\r\n            this._transport.createBidirectionalStream().then((stream) => {\r\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\r\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\r\n                const encoderStream = createPacketEncoderStream();\r\n                encoderStream.readable.pipeTo(stream.writable);\r\n                this._writer = encoderStream.writable.getWriter();\r\n                const read = () => {\r\n                    reader\r\n                        .read()\r\n                        .then(({ done, value }) => {\r\n                        if (done) {\r\n                            return;\r\n                        }\r\n                        this.onPacket(value);\r\n                        read();\r\n                    })\r\n                        .catch((err) => {\r\n                    });\r\n                };\r\n                read();\r\n                const packet = { type: \"open\" };\r\n                if (this.query.sid) {\r\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\r\n                }\r\n                this._writer.write(packet).then(() => this.onOpen());\r\n            });\r\n        });\r\n    }\r\n    write(packets) {\r\n        this.writable = false;\r\n        for (let i = 0; i < packets.length; i++) {\r\n            const packet = packets[i];\r\n            const lastPacket = i === packets.length - 1;\r\n            this._writer.write(packet).then(() => {\r\n                if (lastPacket) {\r\n                    nextTick(() => {\r\n                        this.writable = true;\r\n                        this.emitReserved(\"drain\");\r\n                    }, this.setTimeoutFn);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    doClose() {\r\n        var _a;\r\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\r\n    }\r\n}\r\n","import { XHR } from \"./polling-xhr.node.js\";\r\nimport { WS } from \"./websocket.node.js\";\r\nimport { WT } from \"./webtransport.js\";\r\nexport const transports = {\r\n    websocket: WS,\r\n    webtransport: WT,\r\n    polling: XHR,\r\n};\r\n","// imported from https://github.com/galkn/parseuri\r\n/**\r\n * Parses a URI\r\n *\r\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\r\n *\r\n * See:\r\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\r\n * - https://caniuse.com/url\r\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\r\n *\r\n * History of the parse() method:\r\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\r\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\r\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\nconst parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\nexport function parse(str) {\r\n    if (str.length > 8000) {\r\n        throw \"URI too long\";\r\n    }\r\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n    let m = re.exec(str || ''), uri = {}, i = 14;\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n    uri.pathNames = pathNames(uri, uri['path']);\r\n    uri.queryKey = queryKey(uri, uri['query']);\r\n    return uri;\r\n}\r\nfunction pathNames(obj, path) {\r\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\r\n    if (path.slice(0, 1) == '/' || path.length === 0) {\r\n        names.splice(0, 1);\r\n    }\r\n    if (path.slice(-1) == '/') {\r\n        names.splice(names.length - 1, 1);\r\n    }\r\n    return names;\r\n}\r\nfunction queryKey(uri, query) {\r\n    const data = {};\r\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\r\n        if ($1) {\r\n            data[$1] = $2;\r\n        }\r\n    });\r\n    return data;\r\n}\r\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\r\nimport { installTimerFunctions, byteLength } from \"./util.js\";\r\nimport { decode } from \"./contrib/parseqs.js\";\r\nimport { parse } from \"./contrib/parseuri.js\";\r\nimport { Emitter } from \"@socket.io/component-emitter\";\r\nimport { protocol } from \"engine.io-parser\";\r\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\r\nconst withEventListeners = typeof addEventListener === \"function\" &&\r\n    typeof removeEventListener === \"function\";\r\nconst OFFLINE_EVENT_LISTENERS = [];\r\nif (withEventListeners) {\r\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\r\n    // script, so we create one single event listener here which will forward the event to the socket instances\r\n    addEventListener(\"offline\", () => {\r\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\r\n    }, false);\r\n}\r\n/**\r\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\r\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\r\n *\r\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\r\n * successfully establishes the connection.\r\n *\r\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\r\n *\r\n * @example\r\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\r\n *\r\n * const socket = new SocketWithoutUpgrade({\r\n *   transports: [WebSocket]\r\n * });\r\n *\r\n * socket.on(\"open\", () => {\r\n *   socket.send(\"hello\");\r\n * });\r\n *\r\n * @see SocketWithUpgrade\r\n * @see Socket\r\n */\r\nexport class SocketWithoutUpgrade extends Emitter {\r\n    /**\r\n     * Socket constructor.\r\n     *\r\n     * @param {String|Object} uri - uri or options\r\n     * @param {Object} opts - options\r\n     */\r\n    constructor(uri, opts) {\r\n        super();\r\n        this.binaryType = defaultBinaryType;\r\n        this.writeBuffer = [];\r\n        this._prevBufferLen = 0;\r\n        this._pingInterval = -1;\r\n        this._pingTimeout = -1;\r\n        this._maxPayload = -1;\r\n        /**\r\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\r\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\r\n         */\r\n        this._pingTimeoutTime = Infinity;\r\n        if (uri && \"object\" === typeof uri) {\r\n            opts = uri;\r\n            uri = null;\r\n        }\r\n        if (uri) {\r\n            const parsedUri = parse(uri);\r\n            opts.hostname = parsedUri.host;\r\n            opts.secure =\r\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\r\n            opts.port = parsedUri.port;\r\n            if (parsedUri.query)\r\n                opts.query = parsedUri.query;\r\n        }\r\n        else if (opts.host) {\r\n            opts.hostname = parse(opts.host).host;\r\n        }\r\n        installTimerFunctions(this, opts);\r\n        this.secure =\r\n            null != opts.secure\r\n                ? opts.secure\r\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\r\n        if (opts.hostname && !opts.port) {\r\n            // if no port is specified manually, use the protocol default\r\n            opts.port = this.secure ? \"443\" : \"80\";\r\n        }\r\n        this.hostname =\r\n            opts.hostname ||\r\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\r\n        this.port =\r\n            opts.port ||\r\n                (typeof location !== \"undefined\" && location.port\r\n                    ? location.port\r\n                    : this.secure\r\n                        ? \"443\"\r\n                        : \"80\");\r\n        this.transports = [];\r\n        this._transportsByName = {};\r\n        opts.transports.forEach((t) => {\r\n            const transportName = t.prototype.name;\r\n            this.transports.push(transportName);\r\n            this._transportsByName[transportName] = t;\r\n        });\r\n        this.opts = Object.assign({\r\n            path: \"/engine.io\",\r\n            agent: false,\r\n            withCredentials: false,\r\n            upgrade: true,\r\n            timestampParam: \"t\",\r\n            rememberUpgrade: false,\r\n            addTrailingSlash: true,\r\n            rejectUnauthorized: true,\r\n            perMessageDeflate: {\r\n                threshold: 1024,\r\n            },\r\n            transportOptions: {},\r\n            closeOnBeforeunload: false,\r\n        }, opts);\r\n        this.opts.path =\r\n            this.opts.path.replace(/\\/$/, \"\") +\r\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\r\n        if (typeof this.opts.query === \"string\") {\r\n            this.opts.query = decode(this.opts.query);\r\n        }\r\n        if (withEventListeners) {\r\n            if (this.opts.closeOnBeforeunload) {\r\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\r\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\r\n                // closed/reloaded)\r\n                this._beforeunloadEventListener = () => {\r\n                    if (this.transport) {\r\n                        // silently close the transport\r\n                        this.transport.removeAllListeners();\r\n                        this.transport.close();\r\n                    }\r\n                };\r\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\r\n            }\r\n            if (this.hostname !== \"localhost\") {\r\n                this._offlineEventListener = () => {\r\n                    this._onClose(\"transport close\", {\r\n                        description: \"network connection lost\",\r\n                    });\r\n                };\r\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\r\n            }\r\n        }\r\n        if (this.opts.withCredentials) {\r\n            this._cookieJar = createCookieJar();\r\n        }\r\n        this._open();\r\n    }\r\n    /**\r\n     * Creates transport of the given type.\r\n     *\r\n     * @param {String} name - transport name\r\n     * @return {Transport}\r\n     * @private\r\n     */\r\n    createTransport(name) {\r\n        const query = Object.assign({}, this.opts.query);\r\n        // append engine.io protocol identifier\r\n        query.EIO = protocol;\r\n        // transport name\r\n        query.transport = name;\r\n        // session id if we already have one\r\n        if (this.id)\r\n            query.sid = this.id;\r\n        const opts = Object.assign({}, this.opts, {\r\n            query,\r\n            socket: this,\r\n            hostname: this.hostname,\r\n            secure: this.secure,\r\n            port: this.port,\r\n        }, this.opts.transportOptions[name]);\r\n        return new this._transportsByName[name](opts);\r\n    }\r\n    /**\r\n     * Initializes transport to use and starts probe.\r\n     *\r\n     * @private\r\n     */\r\n    _open() {\r\n        if (this.transports.length === 0) {\r\n            // Emit error on next tick so it can be listened to\r\n            this.setTimeoutFn(() => {\r\n                this.emitReserved(\"error\", \"No transports available\");\r\n            }, 0);\r\n            return;\r\n        }\r\n        const transportName = this.opts.rememberUpgrade &&\r\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\r\n            this.transports.indexOf(\"websocket\") !== -1\r\n            ? \"websocket\"\r\n            : this.transports[0];\r\n        this.readyState = \"opening\";\r\n        const transport = this.createTransport(transportName);\r\n        transport.open();\r\n        this.setTransport(transport);\r\n    }\r\n    /**\r\n     * Sets the current transport. Disables the existing one (if any).\r\n     *\r\n     * @private\r\n     */\r\n    setTransport(transport) {\r\n        if (this.transport) {\r\n            this.transport.removeAllListeners();\r\n        }\r\n        // set up transport\r\n        this.transport = transport;\r\n        // set up transport listeners\r\n        transport\r\n            .on(\"drain\", this._onDrain.bind(this))\r\n            .on(\"packet\", this._onPacket.bind(this))\r\n            .on(\"error\", this._onError.bind(this))\r\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\r\n    }\r\n    /**\r\n     * Called when connection is deemed open.\r\n     *\r\n     * @private\r\n     */\r\n    onOpen() {\r\n        this.readyState = \"open\";\r\n        SocketWithoutUpgrade.priorWebsocketSuccess =\r\n            \"websocket\" === this.transport.name;\r\n        this.emitReserved(\"open\");\r\n        this.flush();\r\n    }\r\n    /**\r\n     * Handles a packet.\r\n     *\r\n     * @private\r\n     */\r\n    _onPacket(packet) {\r\n        if (\"opening\" === this.readyState ||\r\n            \"open\" === this.readyState ||\r\n            \"closing\" === this.readyState) {\r\n            this.emitReserved(\"packet\", packet);\r\n            // Socket is live - any packet counts\r\n            this.emitReserved(\"heartbeat\");\r\n            switch (packet.type) {\r\n                case \"open\":\r\n                    this.onHandshake(JSON.parse(packet.data));\r\n                    break;\r\n                case \"ping\":\r\n                    this._sendPacket(\"pong\");\r\n                    this.emitReserved(\"ping\");\r\n                    this.emitReserved(\"pong\");\r\n                    this._resetPingTimeout();\r\n                    break;\r\n                case \"error\":\r\n                    const err = new Error(\"server error\");\r\n                    // @ts-ignore\r\n                    err.code = packet.data;\r\n                    this._onError(err);\r\n                    break;\r\n                case \"message\":\r\n                    this.emitReserved(\"data\", packet.data);\r\n                    this.emitReserved(\"message\", packet.data);\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    /**\r\n     * Called upon handshake completion.\r\n     *\r\n     * @param {Object} data - handshake obj\r\n     * @private\r\n     */\r\n    onHandshake(data) {\r\n        this.emitReserved(\"handshake\", data);\r\n        this.id = data.sid;\r\n        this.transport.query.sid = data.sid;\r\n        this._pingInterval = data.pingInterval;\r\n        this._pingTimeout = data.pingTimeout;\r\n        this._maxPayload = data.maxPayload;\r\n        this.onOpen();\r\n        // In case open handler closes socket\r\n        if (\"closed\" === this.readyState)\r\n            return;\r\n        this._resetPingTimeout();\r\n    }\r\n    /**\r\n     * Sets and resets ping timeout timer based on server pings.\r\n     *\r\n     * @private\r\n     */\r\n    _resetPingTimeout() {\r\n        this.clearTimeoutFn(this._pingTimeoutTimer);\r\n        const delay = this._pingInterval + this._pingTimeout;\r\n        this._pingTimeoutTime = Date.now() + delay;\r\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\r\n            this._onClose(\"ping timeout\");\r\n        }, delay);\r\n        if (this.opts.autoUnref) {\r\n            this._pingTimeoutTimer.unref();\r\n        }\r\n    }\r\n    /**\r\n     * Called on `drain` event\r\n     *\r\n     * @private\r\n     */\r\n    _onDrain() {\r\n        this.writeBuffer.splice(0, this._prevBufferLen);\r\n        // setting prevBufferLen = 0 is very important\r\n        // for example, when upgrading, upgrade packet is sent over,\r\n        // and a nonzero prevBufferLen could cause problems on `drain`\r\n        this._prevBufferLen = 0;\r\n        if (0 === this.writeBuffer.length) {\r\n            this.emitReserved(\"drain\");\r\n        }\r\n        else {\r\n            this.flush();\r\n        }\r\n    }\r\n    /**\r\n     * Flush write buffers.\r\n     *\r\n     * @private\r\n     */\r\n    flush() {\r\n        if (\"closed\" !== this.readyState &&\r\n            this.transport.writable &&\r\n            !this.upgrading &&\r\n            this.writeBuffer.length) {\r\n            const packets = this._getWritablePackets();\r\n            this.transport.send(packets);\r\n            // keep track of current length of writeBuffer\r\n            // splice writeBuffer and callbackBuffer on `drain`\r\n            this._prevBufferLen = packets.length;\r\n            this.emitReserved(\"flush\");\r\n        }\r\n    }\r\n    /**\r\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\r\n     * long-polling)\r\n     *\r\n     * @private\r\n     */\r\n    _getWritablePackets() {\r\n        const shouldCheckPayloadSize = this._maxPayload &&\r\n            this.transport.name === \"polling\" &&\r\n            this.writeBuffer.length > 1;\r\n        if (!shouldCheckPayloadSize) {\r\n            return this.writeBuffer;\r\n        }\r\n        let payloadSize = 1; // first packet type\r\n        for (let i = 0; i < this.writeBuffer.length; i++) {\r\n            const data = this.writeBuffer[i].data;\r\n            if (data) {\r\n                payloadSize += byteLength(data);\r\n            }\r\n            if (i > 0 && payloadSize > this._maxPayload) {\r\n                return this.writeBuffer.slice(0, i);\r\n            }\r\n            payloadSize += 2; // separator + packet type\r\n        }\r\n        return this.writeBuffer;\r\n    }\r\n    /**\r\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\r\n     *\r\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\r\n     * `write()` method then the message would not be buffered by the Socket.IO client.\r\n     *\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    /* private */ _hasPingExpired() {\r\n        if (!this._pingTimeoutTime)\r\n            return true;\r\n        const hasExpired = Date.now() > this._pingTimeoutTime;\r\n        if (hasExpired) {\r\n            this._pingTimeoutTime = 0;\r\n            nextTick(() => {\r\n                this._onClose(\"ping timeout\");\r\n            }, this.setTimeoutFn);\r\n        }\r\n        return hasExpired;\r\n    }\r\n    /**\r\n     * Sends a message.\r\n     *\r\n     * @param {String} msg - message.\r\n     * @param {Object} options.\r\n     * @param {Function} fn - callback function.\r\n     * @return {Socket} for chaining.\r\n     */\r\n    write(msg, options, fn) {\r\n        this._sendPacket(\"message\", msg, options, fn);\r\n        return this;\r\n    }\r\n    /**\r\n     * Sends a message. Alias of {@link Socket#write}.\r\n     *\r\n     * @param {String} msg - message.\r\n     * @param {Object} options.\r\n     * @param {Function} fn - callback function.\r\n     * @return {Socket} for chaining.\r\n     */\r\n    send(msg, options, fn) {\r\n        this._sendPacket(\"message\", msg, options, fn);\r\n        return this;\r\n    }\r\n    /**\r\n     * Sends a packet.\r\n     *\r\n     * @param {String} type: packet type.\r\n     * @param {String} data.\r\n     * @param {Object} options.\r\n     * @param {Function} fn - callback function.\r\n     * @private\r\n     */\r\n    _sendPacket(type, data, options, fn) {\r\n        if (\"function\" === typeof data) {\r\n            fn = data;\r\n            data = undefined;\r\n        }\r\n        if (\"function\" === typeof options) {\r\n            fn = options;\r\n            options = null;\r\n        }\r\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\r\n            return;\r\n        }\r\n        options = options || {};\r\n        options.compress = false !== options.compress;\r\n        const packet = {\r\n            type: type,\r\n            data: data,\r\n            options: options,\r\n        };\r\n        this.emitReserved(\"packetCreate\", packet);\r\n        this.writeBuffer.push(packet);\r\n        if (fn)\r\n            this.once(\"flush\", fn);\r\n        this.flush();\r\n    }\r\n    /**\r\n     * Closes the connection.\r\n     */\r\n    close() {\r\n        const close = () => {\r\n            this._onClose(\"forced close\");\r\n            this.transport.close();\r\n        };\r\n        const cleanupAndClose = () => {\r\n            this.off(\"upgrade\", cleanupAndClose);\r\n            this.off(\"upgradeError\", cleanupAndClose);\r\n            close();\r\n        };\r\n        const waitForUpgrade = () => {\r\n            // wait for upgrade to finish since we can't send packets while pausing a transport\r\n            this.once(\"upgrade\", cleanupAndClose);\r\n            this.once(\"upgradeError\", cleanupAndClose);\r\n        };\r\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\r\n            this.readyState = \"closing\";\r\n            if (this.writeBuffer.length) {\r\n                this.once(\"drain\", () => {\r\n                    if (this.upgrading) {\r\n                        waitForUpgrade();\r\n                    }\r\n                    else {\r\n                        close();\r\n                    }\r\n                });\r\n            }\r\n            else if (this.upgrading) {\r\n                waitForUpgrade();\r\n            }\r\n            else {\r\n                close();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Called upon transport error\r\n     *\r\n     * @private\r\n     */\r\n    _onError(err) {\r\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\r\n        if (this.opts.tryAllTransports &&\r\n            this.transports.length > 1 &&\r\n            this.readyState === \"opening\") {\r\n            this.transports.shift();\r\n            return this._open();\r\n        }\r\n        this.emitReserved(\"error\", err);\r\n        this._onClose(\"transport error\", err);\r\n    }\r\n    /**\r\n     * Called upon transport close.\r\n     *\r\n     * @private\r\n     */\r\n    _onClose(reason, description) {\r\n        if (\"opening\" === this.readyState ||\r\n            \"open\" === this.readyState ||\r\n            \"closing\" === this.readyState) {\r\n            // clear timers\r\n            this.clearTimeoutFn(this._pingTimeoutTimer);\r\n            // stop event from firing again for transport\r\n            this.transport.removeAllListeners(\"close\");\r\n            // ensure transport won't stay open\r\n            this.transport.close();\r\n            // ignore further transport communication\r\n            this.transport.removeAllListeners();\r\n            if (withEventListeners) {\r\n                if (this._beforeunloadEventListener) {\r\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\r\n                }\r\n                if (this._offlineEventListener) {\r\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\r\n                    if (i !== -1) {\r\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n            // set ready state\r\n            this.readyState = \"closed\";\r\n            // clear session id\r\n            this.id = null;\r\n            // emit close event\r\n            this.emitReserved(\"close\", reason, description);\r\n            // clean buffers after, so users can still\r\n            // grab the buffers on `close` event\r\n            this.writeBuffer = [];\r\n            this._prevBufferLen = 0;\r\n        }\r\n    }\r\n}\r\nSocketWithoutUpgrade.protocol = protocol;\r\n/**\r\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\r\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\r\n *\r\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\r\n * low-level transport, it will try to upgrade to a better transport.\r\n *\r\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\r\n *\r\n * @example\r\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\r\n *\r\n * const socket = new SocketWithUpgrade({\r\n *   transports: [WebSocket]\r\n * });\r\n *\r\n * socket.on(\"open\", () => {\r\n *   socket.send(\"hello\");\r\n * });\r\n *\r\n * @see SocketWithoutUpgrade\r\n * @see Socket\r\n */\r\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._upgrades = [];\r\n    }\r\n    onOpen() {\r\n        super.onOpen();\r\n        if (\"open\" === this.readyState && this.opts.upgrade) {\r\n            for (let i = 0; i < this._upgrades.length; i++) {\r\n                this._probe(this._upgrades[i]);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Probes a transport.\r\n     *\r\n     * @param {String} name - transport name\r\n     * @private\r\n     */\r\n    _probe(name) {\r\n        let transport = this.createTransport(name);\r\n        let failed = false;\r\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\r\n        const onTransportOpen = () => {\r\n            if (failed)\r\n                return;\r\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\r\n            transport.once(\"packet\", (msg) => {\r\n                if (failed)\r\n                    return;\r\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\r\n                    this.upgrading = true;\r\n                    this.emitReserved(\"upgrading\", transport);\r\n                    if (!transport)\r\n                        return;\r\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\r\n                        \"websocket\" === transport.name;\r\n                    this.transport.pause(() => {\r\n                        if (failed)\r\n                            return;\r\n                        if (\"closed\" === this.readyState)\r\n                            return;\r\n                        cleanup();\r\n                        this.setTransport(transport);\r\n                        transport.send([{ type: \"upgrade\" }]);\r\n                        this.emitReserved(\"upgrade\", transport);\r\n                        transport = null;\r\n                        this.upgrading = false;\r\n                        this.flush();\r\n                    });\r\n                }\r\n                else {\r\n                    const err = new Error(\"probe error\");\r\n                    // @ts-ignore\r\n                    err.transport = transport.name;\r\n                    this.emitReserved(\"upgradeError\", err);\r\n                }\r\n            });\r\n        };\r\n        function freezeTransport() {\r\n            if (failed)\r\n                return;\r\n            // Any callback called by transport should be ignored since now\r\n            failed = true;\r\n            cleanup();\r\n            transport.close();\r\n            transport = null;\r\n        }\r\n        // Handle any error that happens while probing\r\n        const onerror = (err) => {\r\n            const error = new Error(\"probe error: \" + err);\r\n            // @ts-ignore\r\n            error.transport = transport.name;\r\n            freezeTransport();\r\n            this.emitReserved(\"upgradeError\", error);\r\n        };\r\n        function onTransportClose() {\r\n            onerror(\"transport closed\");\r\n        }\r\n        // When the socket is closed while we're probing\r\n        function onclose() {\r\n            onerror(\"socket closed\");\r\n        }\r\n        // When the socket is upgraded while we're probing\r\n        function onupgrade(to) {\r\n            if (transport && to.name !== transport.name) {\r\n                freezeTransport();\r\n            }\r\n        }\r\n        // Remove all listeners on the transport and on self\r\n        const cleanup = () => {\r\n            transport.removeListener(\"open\", onTransportOpen);\r\n            transport.removeListener(\"error\", onerror);\r\n            transport.removeListener(\"close\", onTransportClose);\r\n            this.off(\"close\", onclose);\r\n            this.off(\"upgrading\", onupgrade);\r\n        };\r\n        transport.once(\"open\", onTransportOpen);\r\n        transport.once(\"error\", onerror);\r\n        transport.once(\"close\", onTransportClose);\r\n        this.once(\"close\", onclose);\r\n        this.once(\"upgrading\", onupgrade);\r\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\r\n            name !== \"webtransport\") {\r\n            // favor WebTransport\r\n            this.setTimeoutFn(() => {\r\n                if (!failed) {\r\n                    transport.open();\r\n                }\r\n            }, 200);\r\n        }\r\n        else {\r\n            transport.open();\r\n        }\r\n    }\r\n    onHandshake(data) {\r\n        this._upgrades = this._filterUpgrades(data.upgrades);\r\n        super.onHandshake(data);\r\n    }\r\n    /**\r\n     * Filters upgrades, returning only those matching client transports.\r\n     *\r\n     * @param {Array} upgrades - server upgrades\r\n     * @private\r\n     */\r\n    _filterUpgrades(upgrades) {\r\n        const filteredUpgrades = [];\r\n        for (let i = 0; i < upgrades.length; i++) {\r\n            if (~this.transports.indexOf(upgrades[i]))\r\n                filteredUpgrades.push(upgrades[i]);\r\n        }\r\n        return filteredUpgrades;\r\n    }\r\n}\r\n/**\r\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\r\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\r\n *\r\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\r\n * low-level transport, it will try to upgrade to a better transport.\r\n *\r\n * @example\r\n * import { Socket } from \"engine.io-client\";\r\n *\r\n * const socket = new Socket();\r\n *\r\n * socket.on(\"open\", () => {\r\n *   socket.send(\"hello\");\r\n * });\r\n *\r\n * @see SocketWithoutUpgrade\r\n * @see SocketWithUpgrade\r\n */\r\nexport class Socket extends SocketWithUpgrade {\r\n    constructor(uri, opts = {}) {\r\n        const o = typeof uri === \"object\" ? uri : opts;\r\n        if (!o.transports ||\r\n            (o.transports && typeof o.transports[0] === \"string\")) {\r\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\r\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\r\n                .filter((t) => !!t);\r\n        }\r\n        super(uri, o);\r\n    }\r\n}\r\n","import { Polling } from \"./polling.js\";\r\n/**\r\n * HTTP long-polling based on the built-in `fetch()` method.\r\n *\r\n * Usage: browser, Node.js (since v18), Deno, Bun\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/fetch\r\n * @see https://caniuse.com/fetch\r\n * @see https://nodejs.org/api/globals.html#fetch\r\n */\r\nexport class Fetch extends Polling {\r\n    doPoll() {\r\n        this._fetch()\r\n            .then((res) => {\r\n            if (!res.ok) {\r\n                return this.onError(\"fetch read error\", res.status, res);\r\n            }\r\n            res.text().then((data) => this.onData(data));\r\n        })\r\n            .catch((err) => {\r\n            this.onError(\"fetch read error\", err);\r\n        });\r\n    }\r\n    doWrite(data, callback) {\r\n        this._fetch(data)\r\n            .then((res) => {\r\n            if (!res.ok) {\r\n                return this.onError(\"fetch write error\", res.status, res);\r\n            }\r\n            callback();\r\n        })\r\n            .catch((err) => {\r\n            this.onError(\"fetch write error\", err);\r\n        });\r\n    }\r\n    _fetch(data) {\r\n        var _a;\r\n        const isPost = data !== undefined;\r\n        const headers = new Headers(this.opts.extraHeaders);\r\n        if (isPost) {\r\n            headers.set(\"content-type\", \"text/plain;charset=UTF-8\");\r\n        }\r\n        (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.appendCookies(headers);\r\n        return fetch(this.uri(), {\r\n            method: isPost ? \"POST\" : \"GET\",\r\n            body: isPost ? data : null,\r\n            headers,\r\n            credentials: this.opts.withCredentials ? \"include\" : \"omit\",\r\n        }).then((res) => {\r\n            var _a;\r\n            // @ts-ignore getSetCookie() was added in Node.js v19.7.0\r\n            (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(res.headers.getSetCookie());\r\n            return res;\r\n        });\r\n    }\r\n}\r\n","import { Socket } from \"./socket.js\";\r\nexport { Socket };\r\nexport { SocketWithoutUpgrade, SocketWithUpgrade, } from \"./socket.js\";\r\nexport const protocol = Socket.protocol;\r\nexport { Transport, TransportError } from \"./transport.js\";\r\nexport { transports } from \"./transports/index.js\";\r\nexport { installTimerFunctions } from \"./util.js\";\r\nexport { parse } from \"./contrib/parseuri.js\";\r\nexport { nextTick } from \"./globals.node.js\";\r\nexport { Fetch } from \"./transports/polling-fetch.js\";\r\nexport { XHR as NodeXHR } from \"./transports/polling-xhr.node.js\";\r\nexport { XHR } from \"./transports/polling-xhr.js\";\r\nexport { WS as NodeWebSocket } from \"./transports/websocket.node.js\";\r\nexport { WS as WebSocket } from \"./transports/websocket.js\";\r\nexport { WT as WebTransport } from \"./transports/webtransport.js\";\r\n","import { parse } from \"engine.io-client\";\r\n/**\r\n * URL parser.\r\n *\r\n * @param uri - url\r\n * @param path - the request path of the connection\r\n * @param loc - An object meant to mimic window.location.\r\n *        Defaults to window.location.\r\n * @public\r\n */\r\nexport function url(uri, path = \"\", loc) {\r\n    let obj = uri;\r\n    // default to window.location\r\n    loc = loc || (typeof location !== \"undefined\" && location);\r\n    if (null == uri)\r\n        uri = loc.protocol + \"//\" + loc.host;\r\n    // relative path support\r\n    if (typeof uri === \"string\") {\r\n        if (\"/\" === uri.charAt(0)) {\r\n            if (\"/\" === uri.charAt(1)) {\r\n                uri = loc.protocol + uri;\r\n            }\r\n            else {\r\n                uri = loc.host + uri;\r\n            }\r\n        }\r\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\r\n            if (\"undefined\" !== typeof loc) {\r\n                uri = loc.protocol + \"//\" + uri;\r\n            }\r\n            else {\r\n                uri = \"https://\" + uri;\r\n            }\r\n        }\r\n        // parse\r\n        obj = parse(uri);\r\n    }\r\n    // make sure we treat `localhost:80` and `localhost` equally\r\n    if (!obj.port) {\r\n        if (/^(http|ws)$/.test(obj.protocol)) {\r\n            obj.port = \"80\";\r\n        }\r\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\r\n            obj.port = \"443\";\r\n        }\r\n    }\r\n    obj.path = obj.path || \"/\";\r\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\r\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\r\n    // define unique id\r\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\r\n    // define href\r\n    obj.href =\r\n        obj.protocol +\r\n            \"://\" +\r\n            host +\r\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\r\n    return obj;\r\n}\r\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\r\nconst isView = (obj) => {\r\n    return typeof ArrayBuffer.isView === \"function\"\r\n        ? ArrayBuffer.isView(obj)\r\n        : obj.buffer instanceof ArrayBuffer;\r\n};\r\nconst toString = Object.prototype.toString;\r\nconst withNativeBlob = typeof Blob === \"function\" ||\r\n    (typeof Blob !== \"undefined\" &&\r\n        toString.call(Blob) === \"[object BlobConstructor]\");\r\nconst withNativeFile = typeof File === \"function\" ||\r\n    (typeof File !== \"undefined\" &&\r\n        toString.call(File) === \"[object FileConstructor]\");\r\n/**\r\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\r\n *\r\n * @private\r\n */\r\nexport function isBinary(obj) {\r\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\r\n        (withNativeBlob && obj instanceof Blob) ||\r\n        (withNativeFile && obj instanceof File));\r\n}\r\nexport function hasBinary(obj, toJSON) {\r\n    if (!obj || typeof obj !== \"object\") {\r\n        return false;\r\n    }\r\n    if (Array.isArray(obj)) {\r\n        for (let i = 0, l = obj.length; i < l; i++) {\r\n            if (hasBinary(obj[i])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    if (isBinary(obj)) {\r\n        return true;\r\n    }\r\n    if (obj.toJSON &&\r\n        typeof obj.toJSON === \"function\" &&\r\n        arguments.length === 1) {\r\n        return hasBinary(obj.toJSON(), true);\r\n    }\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n","import { isBinary } from \"./is-binary.js\";\r\n/**\r\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\r\n *\r\n * @param {Object} packet - socket.io event packet\r\n * @return {Object} with deconstructed packet and list of buffers\r\n * @public\r\n */\r\nexport function deconstructPacket(packet) {\r\n    const buffers = [];\r\n    const packetData = packet.data;\r\n    const pack = packet;\r\n    pack.data = _deconstructPacket(packetData, buffers);\r\n    pack.attachments = buffers.length; // number of binary 'attachments'\r\n    return { packet: pack, buffers: buffers };\r\n}\r\nfunction _deconstructPacket(data, buffers) {\r\n    if (!data)\r\n        return data;\r\n    if (isBinary(data)) {\r\n        const placeholder = { _placeholder: true, num: buffers.length };\r\n        buffers.push(data);\r\n        return placeholder;\r\n    }\r\n    else if (Array.isArray(data)) {\r\n        const newData = new Array(data.length);\r\n        for (let i = 0; i < data.length; i++) {\r\n            newData[i] = _deconstructPacket(data[i], buffers);\r\n        }\r\n        return newData;\r\n    }\r\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\r\n        const newData = {};\r\n        for (const key in data) {\r\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\r\n                newData[key] = _deconstructPacket(data[key], buffers);\r\n            }\r\n        }\r\n        return newData;\r\n    }\r\n    return data;\r\n}\r\n/**\r\n * Reconstructs a binary packet from its placeholder packet and buffers\r\n *\r\n * @param {Object} packet - event packet with placeholders\r\n * @param {Array} buffers - binary buffers to put in placeholder positions\r\n * @return {Object} reconstructed packet\r\n * @public\r\n */\r\nexport function reconstructPacket(packet, buffers) {\r\n    packet.data = _reconstructPacket(packet.data, buffers);\r\n    delete packet.attachments; // no longer useful\r\n    return packet;\r\n}\r\nfunction _reconstructPacket(data, buffers) {\r\n    if (!data)\r\n        return data;\r\n    if (data && data._placeholder === true) {\r\n        const isIndexValid = typeof data.num === \"number\" &&\r\n            data.num >= 0 &&\r\n            data.num < buffers.length;\r\n        if (isIndexValid) {\r\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\r\n        }\r\n        else {\r\n            throw new Error(\"illegal attachments\");\r\n        }\r\n    }\r\n    else if (Array.isArray(data)) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            data[i] = _reconstructPacket(data[i], buffers);\r\n        }\r\n    }\r\n    else if (typeof data === \"object\") {\r\n        for (const key in data) {\r\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\r\n                data[key] = _reconstructPacket(data[key], buffers);\r\n            }\r\n        }\r\n    }\r\n    return data;\r\n}\r\n","import { Emitter } from \"@socket.io/component-emitter\";\r\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\r\nimport { isBinary, hasBinary } from \"./is-binary.js\";\r\n/**\r\n * These strings must not be used as event names, as they have a special meaning.\r\n */\r\nconst RESERVED_EVENTS = [\r\n    \"connect\",\r\n    \"connect_error\",\r\n    \"disconnect\",\r\n    \"disconnecting\",\r\n    \"newListener\",\r\n    \"removeListener\", // used by the Node.js EventEmitter\r\n];\r\n/**\r\n * Protocol version.\r\n *\r\n * @public\r\n */\r\nexport const protocol = 5;\r\nexport var PacketType;\r\n(function (PacketType) {\r\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\r\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\r\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\r\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\r\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\r\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\r\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\r\n})(PacketType || (PacketType = {}));\r\n/**\r\n * A socket.io Encoder instance\r\n */\r\nexport class Encoder {\r\n    /**\r\n     * Encoder constructor\r\n     *\r\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\r\n     */\r\n    constructor(replacer) {\r\n        this.replacer = replacer;\r\n    }\r\n    /**\r\n     * Encode a packet as a single string if non-binary, or as a\r\n     * buffer sequence, depending on packet type.\r\n     *\r\n     * @param {Object} obj - packet object\r\n     */\r\n    encode(obj) {\r\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\r\n            if (hasBinary(obj)) {\r\n                return this.encodeAsBinary({\r\n                    type: obj.type === PacketType.EVENT\r\n                        ? PacketType.BINARY_EVENT\r\n                        : PacketType.BINARY_ACK,\r\n                    nsp: obj.nsp,\r\n                    data: obj.data,\r\n                    id: obj.id,\r\n                });\r\n            }\r\n        }\r\n        return [this.encodeAsString(obj)];\r\n    }\r\n    /**\r\n     * Encode packet as string.\r\n     */\r\n    encodeAsString(obj) {\r\n        // first is type\r\n        let str = \"\" + obj.type;\r\n        // attachments if we have them\r\n        if (obj.type === PacketType.BINARY_EVENT ||\r\n            obj.type === PacketType.BINARY_ACK) {\r\n            str += obj.attachments + \"-\";\r\n        }\r\n        // if we have a namespace other than `/`\r\n        // we append it followed by a comma `,`\r\n        if (obj.nsp && \"/\" !== obj.nsp) {\r\n            str += obj.nsp + \",\";\r\n        }\r\n        // immediately followed by the id\r\n        if (null != obj.id) {\r\n            str += obj.id;\r\n        }\r\n        // json data\r\n        if (null != obj.data) {\r\n            str += JSON.stringify(obj.data, this.replacer);\r\n        }\r\n        return str;\r\n    }\r\n    /**\r\n     * Encode packet as 'buffer sequence' by removing blobs, and\r\n     * deconstructing packet into object with placeholders and\r\n     * a list of buffers.\r\n     */\r\n    encodeAsBinary(obj) {\r\n        const deconstruction = deconstructPacket(obj);\r\n        const pack = this.encodeAsString(deconstruction.packet);\r\n        const buffers = deconstruction.buffers;\r\n        buffers.unshift(pack); // add packet info to beginning of data list\r\n        return buffers; // write all the buffers\r\n    }\r\n}\r\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\r\nfunction isObject(value) {\r\n    return Object.prototype.toString.call(value) === \"[object Object]\";\r\n}\r\n/**\r\n * A socket.io Decoder instance\r\n *\r\n * @return {Object} decoder\r\n */\r\nexport class Decoder extends Emitter {\r\n    /**\r\n     * Decoder constructor\r\n     *\r\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\r\n     */\r\n    constructor(reviver) {\r\n        super();\r\n        this.reviver = reviver;\r\n    }\r\n    /**\r\n     * Decodes an encoded packet string into packet JSON.\r\n     *\r\n     * @param {String} obj - encoded packet\r\n     */\r\n    add(obj) {\r\n        let packet;\r\n        if (typeof obj === \"string\") {\r\n            if (this.reconstructor) {\r\n                throw new Error(\"got plaintext data when reconstructing a packet\");\r\n            }\r\n            packet = this.decodeString(obj);\r\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\r\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\r\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\r\n                // binary packet's json\r\n                this.reconstructor = new BinaryReconstructor(packet);\r\n                // no attachments, labeled binary but no binary data to follow\r\n                if (packet.attachments === 0) {\r\n                    super.emitReserved(\"decoded\", packet);\r\n                }\r\n            }\r\n            else {\r\n                // non-binary full packet\r\n                super.emitReserved(\"decoded\", packet);\r\n            }\r\n        }\r\n        else if (isBinary(obj) || obj.base64) {\r\n            // raw binary data\r\n            if (!this.reconstructor) {\r\n                throw new Error(\"got binary data when not reconstructing a packet\");\r\n            }\r\n            else {\r\n                packet = this.reconstructor.takeBinaryData(obj);\r\n                if (packet) {\r\n                    // received final buffer\r\n                    this.reconstructor = null;\r\n                    super.emitReserved(\"decoded\", packet);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Unknown type: \" + obj);\r\n        }\r\n    }\r\n    /**\r\n     * Decode a packet String (JSON data)\r\n     *\r\n     * @param {String} str\r\n     * @return {Object} packet\r\n     */\r\n    decodeString(str) {\r\n        let i = 0;\r\n        // look up type\r\n        const p = {\r\n            type: Number(str.charAt(0)),\r\n        };\r\n        if (PacketType[p.type] === undefined) {\r\n            throw new Error(\"unknown packet type \" + p.type);\r\n        }\r\n        // look up attachments if type binary\r\n        if (p.type === PacketType.BINARY_EVENT ||\r\n            p.type === PacketType.BINARY_ACK) {\r\n            const start = i + 1;\r\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\r\n            const buf = str.substring(start, i);\r\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\r\n                throw new Error(\"Illegal attachments\");\r\n            }\r\n            p.attachments = Number(buf);\r\n        }\r\n        // look up namespace (if any)\r\n        if (\"/\" === str.charAt(i + 1)) {\r\n            const start = i + 1;\r\n            while (++i) {\r\n                const c = str.charAt(i);\r\n                if (\",\" === c)\r\n                    break;\r\n                if (i === str.length)\r\n                    break;\r\n            }\r\n            p.nsp = str.substring(start, i);\r\n        }\r\n        else {\r\n            p.nsp = \"/\";\r\n        }\r\n        // look up id\r\n        const next = str.charAt(i + 1);\r\n        if (\"\" !== next && Number(next) == next) {\r\n            const start = i + 1;\r\n            while (++i) {\r\n                const c = str.charAt(i);\r\n                if (null == c || Number(c) != c) {\r\n                    --i;\r\n                    break;\r\n                }\r\n                if (i === str.length)\r\n                    break;\r\n            }\r\n            p.id = Number(str.substring(start, i + 1));\r\n        }\r\n        // look up json data\r\n        if (str.charAt(++i)) {\r\n            const payload = this.tryParse(str.substr(i));\r\n            if (Decoder.isPayloadValid(p.type, payload)) {\r\n                p.data = payload;\r\n            }\r\n            else {\r\n                throw new Error(\"invalid payload\");\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n    tryParse(str) {\r\n        try {\r\n            return JSON.parse(str, this.reviver);\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    static isPayloadValid(type, payload) {\r\n        switch (type) {\r\n            case PacketType.CONNECT:\r\n                return isObject(payload);\r\n            case PacketType.DISCONNECT:\r\n                return payload === undefined;\r\n            case PacketType.CONNECT_ERROR:\r\n                return typeof payload === \"string\" || isObject(payload);\r\n            case PacketType.EVENT:\r\n            case PacketType.BINARY_EVENT:\r\n                return (Array.isArray(payload) &&\r\n                    (typeof payload[0] === \"number\" ||\r\n                        (typeof payload[0] === \"string\" &&\r\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\r\n            case PacketType.ACK:\r\n            case PacketType.BINARY_ACK:\r\n                return Array.isArray(payload);\r\n        }\r\n    }\r\n    /**\r\n     * Deallocates a parser's resources\r\n     */\r\n    destroy() {\r\n        if (this.reconstructor) {\r\n            this.reconstructor.finishedReconstruction();\r\n            this.reconstructor = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * A manager of a binary event's 'buffer sequence'. Should\r\n * be constructed whenever a packet of type BINARY_EVENT is\r\n * decoded.\r\n *\r\n * @param {Object} packet\r\n * @return {BinaryReconstructor} initialized reconstructor\r\n */\r\nclass BinaryReconstructor {\r\n    constructor(packet) {\r\n        this.packet = packet;\r\n        this.buffers = [];\r\n        this.reconPack = packet;\r\n    }\r\n    /**\r\n     * Method to be called when binary data received from connection\r\n     * after a BINARY_EVENT packet.\r\n     *\r\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\r\n     * @return {null | Object} returns null if more binary data is expected or\r\n     *   a reconstructed packet object if all buffers have been received.\r\n     */\r\n    takeBinaryData(binData) {\r\n        this.buffers.push(binData);\r\n        if (this.buffers.length === this.reconPack.attachments) {\r\n            // done with buffer list\r\n            const packet = reconstructPacket(this.reconPack, this.buffers);\r\n            this.finishedReconstruction();\r\n            return packet;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Cleans up binary packet reconstruction variables.\r\n     */\r\n    finishedReconstruction() {\r\n        this.reconPack = null;\r\n        this.buffers = [];\r\n    }\r\n}\r\n","export function on(obj, ev, fn) {\r\n    obj.on(ev, fn);\r\n    return function subDestroy() {\r\n        obj.off(ev, fn);\r\n    };\r\n}\r\n","import { PacketType } from \"socket.io-parser\";\r\nimport { on } from \"./on.js\";\r\nimport { Emitter, } from \"@socket.io/component-emitter\";\r\n/**\r\n * Internal events.\r\n * These events can't be emitted by the user.\r\n */\r\nconst RESERVED_EVENTS = Object.freeze({\r\n    connect: 1,\r\n    connect_error: 1,\r\n    disconnect: 1,\r\n    disconnecting: 1,\r\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\r\n    newListener: 1,\r\n    removeListener: 1,\r\n});\r\n/**\r\n * A Socket is the fundamental class for interacting with the server.\r\n *\r\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\r\n *\r\n * @example\r\n * const socket = io();\r\n *\r\n * socket.on(\"connect\", () => {\r\n *   console.log(\"connected\");\r\n * });\r\n *\r\n * // send an event to the server\r\n * socket.emit(\"foo\", \"bar\");\r\n *\r\n * socket.on(\"foobar\", () => {\r\n *   // an event was received from the server\r\n * });\r\n *\r\n * // upon disconnection\r\n * socket.on(\"disconnect\", (reason) => {\r\n *   console.log(`disconnected due to ${reason}`);\r\n * });\r\n */\r\nexport class Socket extends Emitter {\r\n    /**\r\n     * `Socket` constructor.\r\n     */\r\n    constructor(io, nsp, opts) {\r\n        super();\r\n        /**\r\n         * Whether the socket is currently connected to the server.\r\n         *\r\n         * @example\r\n         * const socket = io();\r\n         *\r\n         * socket.on(\"connect\", () => {\r\n         *   console.log(socket.connected); // true\r\n         * });\r\n         *\r\n         * socket.on(\"disconnect\", () => {\r\n         *   console.log(socket.connected); // false\r\n         * });\r\n         */\r\n        this.connected = false;\r\n        /**\r\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\r\n         * be transmitted by the server.\r\n         */\r\n        this.recovered = false;\r\n        /**\r\n         * Buffer for packets received before the CONNECT packet\r\n         */\r\n        this.receiveBuffer = [];\r\n        /**\r\n         * Buffer for packets that will be sent once the socket is connected\r\n         */\r\n        this.sendBuffer = [];\r\n        /**\r\n         * The queue of packets to be sent with retry in case of failure.\r\n         *\r\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\r\n         * @private\r\n         */\r\n        this._queue = [];\r\n        /**\r\n         * A sequence to generate the ID of the {@link QueuedPacket}.\r\n         * @private\r\n         */\r\n        this._queueSeq = 0;\r\n        this.ids = 0;\r\n        /**\r\n         * A map containing acknowledgement handlers.\r\n         *\r\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\r\n         *\r\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\r\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\r\n         * - `const value = await socket.emitWithAck(\"test\")`\r\n         *\r\n         * From those that don't:\r\n         *\r\n         * - `socket.emit(\"test\", (value) => { ... });`\r\n         *\r\n         * In the first case, the handlers will be called with an error when:\r\n         *\r\n         * - the timeout is reached\r\n         * - the socket gets disconnected\r\n         *\r\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\r\n         * an acknowledgement from the server.\r\n         *\r\n         * @private\r\n         */\r\n        this.acks = {};\r\n        this.flags = {};\r\n        this.io = io;\r\n        this.nsp = nsp;\r\n        if (opts && opts.auth) {\r\n            this.auth = opts.auth;\r\n        }\r\n        this._opts = Object.assign({}, opts);\r\n        if (this.io._autoConnect)\r\n            this.open();\r\n    }\r\n    /**\r\n     * Whether the socket is currently disconnected\r\n     *\r\n     * @example\r\n     * const socket = io();\r\n     *\r\n     * socket.on(\"connect\", () => {\r\n     *   console.log(socket.disconnected); // false\r\n     * });\r\n     *\r\n     * socket.on(\"disconnect\", () => {\r\n     *   console.log(socket.disconnected); // true\r\n     * });\r\n     */\r\n    get disconnected() {\r\n        return !this.connected;\r\n    }\r\n    /**\r\n     * Subscribe to open, close and packet events\r\n     *\r\n     * @private\r\n     */\r\n    subEvents() {\r\n        if (this.subs)\r\n            return;\r\n        const io = this.io;\r\n        this.subs = [\r\n            on(io, \"open\", this.onopen.bind(this)),\r\n            on(io, \"packet\", this.onpacket.bind(this)),\r\n            on(io, \"error\", this.onerror.bind(this)),\r\n            on(io, \"close\", this.onclose.bind(this)),\r\n        ];\r\n    }\r\n    /**\r\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\r\n     *\r\n     * @example\r\n     * const socket = io();\r\n     *\r\n     * console.log(socket.active); // true\r\n     *\r\n     * socket.on(\"disconnect\", (reason) => {\r\n     *   if (reason === \"io server disconnect\") {\r\n     *     // the disconnection was initiated by the server, you need to manually reconnect\r\n     *     console.log(socket.active); // false\r\n     *   }\r\n     *   // else the socket will automatically try to reconnect\r\n     *   console.log(socket.active); // true\r\n     * });\r\n     */\r\n    get active() {\r\n        return !!this.subs;\r\n    }\r\n    /**\r\n     * \"Opens\" the socket.\r\n     *\r\n     * @example\r\n     * const socket = io({\r\n     *   autoConnect: false\r\n     * });\r\n     *\r\n     * socket.connect();\r\n     */\r\n    connect() {\r\n        if (this.connected)\r\n            return this;\r\n        this.subEvents();\r\n        if (!this.io[\"_reconnecting\"])\r\n            this.io.open(); // ensure open\r\n        if (\"open\" === this.io._readyState)\r\n            this.onopen();\r\n        return this;\r\n    }\r\n    /**\r\n     * Alias for {@link connect()}.\r\n     */\r\n    open() {\r\n        return this.connect();\r\n    }\r\n    /**\r\n     * Sends a `message` event.\r\n     *\r\n     * This method mimics the WebSocket.send() method.\r\n     *\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\r\n     *\r\n     * @example\r\n     * socket.send(\"hello\");\r\n     *\r\n     * // this is equivalent to\r\n     * socket.emit(\"message\", \"hello\");\r\n     *\r\n     * @return self\r\n     */\r\n    send(...args) {\r\n        args.unshift(\"message\");\r\n        this.emit.apply(this, args);\r\n        return this;\r\n    }\r\n    /**\r\n     * Override `emit`.\r\n     * If the event is in `events`, it's emitted normally.\r\n     *\r\n     * @example\r\n     * socket.emit(\"hello\", \"world\");\r\n     *\r\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\r\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\r\n     *\r\n     * // with an acknowledgement from the server\r\n     * socket.emit(\"hello\", \"world\", (val) => {\r\n     *   // ...\r\n     * });\r\n     *\r\n     * @return self\r\n     */\r\n    emit(ev, ...args) {\r\n        var _a, _b, _c;\r\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\r\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\r\n        }\r\n        args.unshift(ev);\r\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\r\n            this._addToQueue(args);\r\n            return this;\r\n        }\r\n        const packet = {\r\n            type: PacketType.EVENT,\r\n            data: args,\r\n        };\r\n        packet.options = {};\r\n        packet.options.compress = this.flags.compress !== false;\r\n        // event ack callback\r\n        if (\"function\" === typeof args[args.length - 1]) {\r\n            const id = this.ids++;\r\n            const ack = args.pop();\r\n            this._registerAckCallback(id, ack);\r\n            packet.id = id;\r\n        }\r\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\r\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\r\n        const discardPacket = this.flags.volatile && !isTransportWritable;\r\n        if (discardPacket) {\r\n        }\r\n        else if (isConnected) {\r\n            this.notifyOutgoingListeners(packet);\r\n            this.packet(packet);\r\n        }\r\n        else {\r\n            this.sendBuffer.push(packet);\r\n        }\r\n        this.flags = {};\r\n        return this;\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    _registerAckCallback(id, ack) {\r\n        var _a;\r\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\r\n        if (timeout === undefined) {\r\n            this.acks[id] = ack;\r\n            return;\r\n        }\r\n        // @ts-ignore\r\n        const timer = this.io.setTimeoutFn(() => {\r\n            delete this.acks[id];\r\n            for (let i = 0; i < this.sendBuffer.length; i++) {\r\n                if (this.sendBuffer[i].id === id) {\r\n                    this.sendBuffer.splice(i, 1);\r\n                }\r\n            }\r\n            ack.call(this, new Error(\"operation has timed out\"));\r\n        }, timeout);\r\n        const fn = (...args) => {\r\n            // @ts-ignore\r\n            this.io.clearTimeoutFn(timer);\r\n            ack.apply(this, args);\r\n        };\r\n        fn.withError = true;\r\n        this.acks[id] = fn;\r\n    }\r\n    /**\r\n     * Emits an event and waits for an acknowledgement\r\n     *\r\n     * @example\r\n     * // without timeout\r\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\r\n     *\r\n     * // with a specific timeout\r\n     * try {\r\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\r\n     * } catch (err) {\r\n     *   // the server did not acknowledge the event in the given delay\r\n     * }\r\n     *\r\n     * @return a Promise that will be fulfilled when the server acknowledges the event\r\n     */\r\n    emitWithAck(ev, ...args) {\r\n        return new Promise((resolve, reject) => {\r\n            const fn = (arg1, arg2) => {\r\n                return arg1 ? reject(arg1) : resolve(arg2);\r\n            };\r\n            fn.withError = true;\r\n            args.push(fn);\r\n            this.emit(ev, ...args);\r\n        });\r\n    }\r\n    /**\r\n     * Add the packet to the queue.\r\n     * @param args\r\n     * @private\r\n     */\r\n    _addToQueue(args) {\r\n        let ack;\r\n        if (typeof args[args.length - 1] === \"function\") {\r\n            ack = args.pop();\r\n        }\r\n        const packet = {\r\n            id: this._queueSeq++,\r\n            tryCount: 0,\r\n            pending: false,\r\n            args,\r\n            flags: Object.assign({ fromQueue: true }, this.flags),\r\n        };\r\n        args.push((err, ...responseArgs) => {\r\n            if (packet !== this._queue[0]) {\r\n                // the packet has already been acknowledged\r\n                return;\r\n            }\r\n            const hasError = err !== null;\r\n            if (hasError) {\r\n                if (packet.tryCount > this._opts.retries) {\r\n                    this._queue.shift();\r\n                    if (ack) {\r\n                        ack(err);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._queue.shift();\r\n                if (ack) {\r\n                    ack(null, ...responseArgs);\r\n                }\r\n            }\r\n            packet.pending = false;\r\n            return this._drainQueue();\r\n        });\r\n        this._queue.push(packet);\r\n        this._drainQueue();\r\n    }\r\n    /**\r\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\r\n     * @param force - whether to resend a packet that has not been acknowledged yet\r\n     *\r\n     * @private\r\n     */\r\n    _drainQueue(force = false) {\r\n        if (!this.connected || this._queue.length === 0) {\r\n            return;\r\n        }\r\n        const packet = this._queue[0];\r\n        if (packet.pending && !force) {\r\n            return;\r\n        }\r\n        packet.pending = true;\r\n        packet.tryCount++;\r\n        this.flags = packet.flags;\r\n        this.emit.apply(this, packet.args);\r\n    }\r\n    /**\r\n     * Sends a packet.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    packet(packet) {\r\n        packet.nsp = this.nsp;\r\n        this.io._packet(packet);\r\n    }\r\n    /**\r\n     * Called upon engine `open`.\r\n     *\r\n     * @private\r\n     */\r\n    onopen() {\r\n        if (typeof this.auth == \"function\") {\r\n            this.auth((data) => {\r\n                this._sendConnectPacket(data);\r\n            });\r\n        }\r\n        else {\r\n            this._sendConnectPacket(this.auth);\r\n        }\r\n    }\r\n    /**\r\n     * Sends a CONNECT packet to initiate the Socket.IO session.\r\n     *\r\n     * @param data\r\n     * @private\r\n     */\r\n    _sendConnectPacket(data) {\r\n        this.packet({\r\n            type: PacketType.CONNECT,\r\n            data: this._pid\r\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\r\n                : data,\r\n        });\r\n    }\r\n    /**\r\n     * Called upon engine or manager `error`.\r\n     *\r\n     * @param err\r\n     * @private\r\n     */\r\n    onerror(err) {\r\n        if (!this.connected) {\r\n            this.emitReserved(\"connect_error\", err);\r\n        }\r\n    }\r\n    /**\r\n     * Called upon engine `close`.\r\n     *\r\n     * @param reason\r\n     * @param description\r\n     * @private\r\n     */\r\n    onclose(reason, description) {\r\n        this.connected = false;\r\n        delete this.id;\r\n        this.emitReserved(\"disconnect\", reason, description);\r\n        this._clearAcks();\r\n    }\r\n    /**\r\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\r\n     * the server.\r\n     *\r\n     * @private\r\n     */\r\n    _clearAcks() {\r\n        Object.keys(this.acks).forEach((id) => {\r\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\r\n            if (!isBuffered) {\r\n                // note: handlers that do not accept an error as first argument are ignored here\r\n                const ack = this.acks[id];\r\n                delete this.acks[id];\r\n                if (ack.withError) {\r\n                    ack.call(this, new Error(\"socket has been disconnected\"));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Called with socket packet.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    onpacket(packet) {\r\n        const sameNamespace = packet.nsp === this.nsp;\r\n        if (!sameNamespace)\r\n            return;\r\n        switch (packet.type) {\r\n            case PacketType.CONNECT:\r\n                if (packet.data && packet.data.sid) {\r\n                    this.onconnect(packet.data.sid, packet.data.pid);\r\n                }\r\n                else {\r\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\r\n                }\r\n                break;\r\n            case PacketType.EVENT:\r\n            case PacketType.BINARY_EVENT:\r\n                this.onevent(packet);\r\n                break;\r\n            case PacketType.ACK:\r\n            case PacketType.BINARY_ACK:\r\n                this.onack(packet);\r\n                break;\r\n            case PacketType.DISCONNECT:\r\n                this.ondisconnect();\r\n                break;\r\n            case PacketType.CONNECT_ERROR:\r\n                this.destroy();\r\n                const err = new Error(packet.data.message);\r\n                // @ts-ignore\r\n                err.data = packet.data.data;\r\n                this.emitReserved(\"connect_error\", err);\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * Called upon a server event.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    onevent(packet) {\r\n        const args = packet.data || [];\r\n        if (null != packet.id) {\r\n            args.push(this.ack(packet.id));\r\n        }\r\n        if (this.connected) {\r\n            this.emitEvent(args);\r\n        }\r\n        else {\r\n            this.receiveBuffer.push(Object.freeze(args));\r\n        }\r\n    }\r\n    emitEvent(args) {\r\n        if (this._anyListeners && this._anyListeners.length) {\r\n            const listeners = this._anyListeners.slice();\r\n            for (const listener of listeners) {\r\n                listener.apply(this, args);\r\n            }\r\n        }\r\n        super.emit.apply(this, args);\r\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\r\n            this._lastOffset = args[args.length - 1];\r\n        }\r\n    }\r\n    /**\r\n     * Produces an ack callback to emit with an event.\r\n     *\r\n     * @private\r\n     */\r\n    ack(id) {\r\n        const self = this;\r\n        let sent = false;\r\n        return function (...args) {\r\n            // prevent double callbacks\r\n            if (sent)\r\n                return;\r\n            sent = true;\r\n            self.packet({\r\n                type: PacketType.ACK,\r\n                id: id,\r\n                data: args,\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Called upon a server acknowledgement.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    onack(packet) {\r\n        const ack = this.acks[packet.id];\r\n        if (typeof ack !== \"function\") {\r\n            return;\r\n        }\r\n        delete this.acks[packet.id];\r\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\r\n        if (ack.withError) {\r\n            packet.data.unshift(null);\r\n        }\r\n        // @ts-ignore\r\n        ack.apply(this, packet.data);\r\n    }\r\n    /**\r\n     * Called upon server connect.\r\n     *\r\n     * @private\r\n     */\r\n    onconnect(id, pid) {\r\n        this.id = id;\r\n        this.recovered = pid && this._pid === pid;\r\n        this._pid = pid; // defined only if connection state recovery is enabled\r\n        this.connected = true;\r\n        this.emitBuffered();\r\n        this.emitReserved(\"connect\");\r\n        this._drainQueue(true);\r\n    }\r\n    /**\r\n     * Emit buffered events (received and emitted).\r\n     *\r\n     * @private\r\n     */\r\n    emitBuffered() {\r\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\r\n        this.receiveBuffer = [];\r\n        this.sendBuffer.forEach((packet) => {\r\n            this.notifyOutgoingListeners(packet);\r\n            this.packet(packet);\r\n        });\r\n        this.sendBuffer = [];\r\n    }\r\n    /**\r\n     * Called upon server disconnect.\r\n     *\r\n     * @private\r\n     */\r\n    ondisconnect() {\r\n        this.destroy();\r\n        this.onclose(\"io server disconnect\");\r\n    }\r\n    /**\r\n     * Called upon forced client/server side disconnections,\r\n     * this method ensures the manager stops tracking us and\r\n     * that reconnections don't get triggered for this.\r\n     *\r\n     * @private\r\n     */\r\n    destroy() {\r\n        if (this.subs) {\r\n            // clean subscriptions to avoid reconnections\r\n            this.subs.forEach((subDestroy) => subDestroy());\r\n            this.subs = undefined;\r\n        }\r\n        this.io[\"_destroy\"](this);\r\n    }\r\n    /**\r\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\r\n     *\r\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\r\n     *\r\n     * @example\r\n     * const socket = io();\r\n     *\r\n     * socket.on(\"disconnect\", (reason) => {\r\n     *   // console.log(reason); prints \"io client disconnect\"\r\n     * });\r\n     *\r\n     * socket.disconnect();\r\n     *\r\n     * @return self\r\n     */\r\n    disconnect() {\r\n        if (this.connected) {\r\n            this.packet({ type: PacketType.DISCONNECT });\r\n        }\r\n        // remove socket from pool\r\n        this.destroy();\r\n        if (this.connected) {\r\n            // fire events\r\n            this.onclose(\"io client disconnect\");\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Alias for {@link disconnect()}.\r\n     *\r\n     * @return self\r\n     */\r\n    close() {\r\n        return this.disconnect();\r\n    }\r\n    /**\r\n     * Sets the compress flag.\r\n     *\r\n     * @example\r\n     * socket.compress(false).emit(\"hello\");\r\n     *\r\n     * @param compress - if `true`, compresses the sending data\r\n     * @return self\r\n     */\r\n    compress(compress) {\r\n        this.flags.compress = compress;\r\n        return this;\r\n    }\r\n    /**\r\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\r\n     * ready to send messages.\r\n     *\r\n     * @example\r\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\r\n     *\r\n     * @returns self\r\n     */\r\n    get volatile() {\r\n        this.flags.volatile = true;\r\n        return this;\r\n    }\r\n    /**\r\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\r\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\r\n     *\r\n     * @example\r\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\r\n     *   if (err) {\r\n     *     // the server did not acknowledge the event in the given delay\r\n     *   }\r\n     * });\r\n     *\r\n     * @returns self\r\n     */\r\n    timeout(timeout) {\r\n        this.flags.timeout = timeout;\r\n        return this;\r\n    }\r\n    /**\r\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\r\n     * callback.\r\n     *\r\n     * @example\r\n     * socket.onAny((event, ...args) => {\r\n     *   console.log(`got ${event}`);\r\n     * });\r\n     *\r\n     * @param listener\r\n     */\r\n    onAny(listener) {\r\n        this._anyListeners = this._anyListeners || [];\r\n        this._anyListeners.push(listener);\r\n        return this;\r\n    }\r\n    /**\r\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\r\n     * callback. The listener is added to the beginning of the listeners array.\r\n     *\r\n     * @example\r\n     * socket.prependAny((event, ...args) => {\r\n     *   console.log(`got event ${event}`);\r\n     * });\r\n     *\r\n     * @param listener\r\n     */\r\n    prependAny(listener) {\r\n        this._anyListeners = this._anyListeners || [];\r\n        this._anyListeners.unshift(listener);\r\n        return this;\r\n    }\r\n    /**\r\n     * Removes the listener that will be fired when any event is emitted.\r\n     *\r\n     * @example\r\n     * const catchAllListener = (event, ...args) => {\r\n     *   console.log(`got event ${event}`);\r\n     * }\r\n     *\r\n     * socket.onAny(catchAllListener);\r\n     *\r\n     * // remove a specific listener\r\n     * socket.offAny(catchAllListener);\r\n     *\r\n     * // or remove all listeners\r\n     * socket.offAny();\r\n     *\r\n     * @param listener\r\n     */\r\n    offAny(listener) {\r\n        if (!this._anyListeners) {\r\n            return this;\r\n        }\r\n        if (listener) {\r\n            const listeners = this._anyListeners;\r\n            for (let i = 0; i < listeners.length; i++) {\r\n                if (listener === listeners[i]) {\r\n                    listeners.splice(i, 1);\r\n                    return this;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._anyListeners = [];\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\r\n     * e.g. to remove listeners.\r\n     */\r\n    listenersAny() {\r\n        return this._anyListeners || [];\r\n    }\r\n    /**\r\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\r\n     * callback.\r\n     *\r\n     * Note: acknowledgements sent to the server are not included.\r\n     *\r\n     * @example\r\n     * socket.onAnyOutgoing((event, ...args) => {\r\n     *   console.log(`sent event ${event}`);\r\n     * });\r\n     *\r\n     * @param listener\r\n     */\r\n    onAnyOutgoing(listener) {\r\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\r\n        this._anyOutgoingListeners.push(listener);\r\n        return this;\r\n    }\r\n    /**\r\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\r\n     * callback. The listener is added to the beginning of the listeners array.\r\n     *\r\n     * Note: acknowledgements sent to the server are not included.\r\n     *\r\n     * @example\r\n     * socket.prependAnyOutgoing((event, ...args) => {\r\n     *   console.log(`sent event ${event}`);\r\n     * });\r\n     *\r\n     * @param listener\r\n     */\r\n    prependAnyOutgoing(listener) {\r\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\r\n        this._anyOutgoingListeners.unshift(listener);\r\n        return this;\r\n    }\r\n    /**\r\n     * Removes the listener that will be fired when any event is emitted.\r\n     *\r\n     * @example\r\n     * const catchAllListener = (event, ...args) => {\r\n     *   console.log(`sent event ${event}`);\r\n     * }\r\n     *\r\n     * socket.onAnyOutgoing(catchAllListener);\r\n     *\r\n     * // remove a specific listener\r\n     * socket.offAnyOutgoing(catchAllListener);\r\n     *\r\n     * // or remove all listeners\r\n     * socket.offAnyOutgoing();\r\n     *\r\n     * @param [listener] - the catch-all listener (optional)\r\n     */\r\n    offAnyOutgoing(listener) {\r\n        if (!this._anyOutgoingListeners) {\r\n            return this;\r\n        }\r\n        if (listener) {\r\n            const listeners = this._anyOutgoingListeners;\r\n            for (let i = 0; i < listeners.length; i++) {\r\n                if (listener === listeners[i]) {\r\n                    listeners.splice(i, 1);\r\n                    return this;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._anyOutgoingListeners = [];\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\r\n     * e.g. to remove listeners.\r\n     */\r\n    listenersAnyOutgoing() {\r\n        return this._anyOutgoingListeners || [];\r\n    }\r\n    /**\r\n     * Notify the listeners for each packet sent\r\n     *\r\n     * @param packet\r\n     *\r\n     * @private\r\n     */\r\n    notifyOutgoingListeners(packet) {\r\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\r\n            const listeners = this._anyOutgoingListeners.slice();\r\n            for (const listener of listeners) {\r\n                listener.apply(this, packet.data);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Initialize backoff timer with `opts`.\r\n *\r\n * - `min` initial timeout in milliseconds [100]\r\n * - `max` max timeout [10000]\r\n * - `jitter` [0]\r\n * - `factor` [2]\r\n *\r\n * @param {Object} opts\r\n * @api public\r\n */\r\nexport function Backoff(opts) {\r\n    opts = opts || {};\r\n    this.ms = opts.min || 100;\r\n    this.max = opts.max || 10000;\r\n    this.factor = opts.factor || 2;\r\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\r\n    this.attempts = 0;\r\n}\r\n/**\r\n * Return the backoff duration.\r\n *\r\n * @return {Number}\r\n * @api public\r\n */\r\nBackoff.prototype.duration = function () {\r\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\r\n    if (this.jitter) {\r\n        var rand = Math.random();\r\n        var deviation = Math.floor(rand * this.jitter * ms);\r\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\r\n    }\r\n    return Math.min(ms, this.max) | 0;\r\n};\r\n/**\r\n * Reset the number of attempts.\r\n *\r\n * @api public\r\n */\r\nBackoff.prototype.reset = function () {\r\n    this.attempts = 0;\r\n};\r\n/**\r\n * Set the minimum duration\r\n *\r\n * @api public\r\n */\r\nBackoff.prototype.setMin = function (min) {\r\n    this.ms = min;\r\n};\r\n/**\r\n * Set the maximum duration\r\n *\r\n * @api public\r\n */\r\nBackoff.prototype.setMax = function (max) {\r\n    this.max = max;\r\n};\r\n/**\r\n * Set the jitter\r\n *\r\n * @api public\r\n */\r\nBackoff.prototype.setJitter = function (jitter) {\r\n    this.jitter = jitter;\r\n};\r\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\r\nimport { Socket } from \"./socket.js\";\r\nimport * as parser from \"socket.io-parser\";\r\nimport { on } from \"./on.js\";\r\nimport { Backoff } from \"./contrib/backo2.js\";\r\nimport { Emitter, } from \"@socket.io/component-emitter\";\r\nexport class Manager extends Emitter {\r\n    constructor(uri, opts) {\r\n        var _a;\r\n        super();\r\n        this.nsps = {};\r\n        this.subs = [];\r\n        if (uri && \"object\" === typeof uri) {\r\n            opts = uri;\r\n            uri = undefined;\r\n        }\r\n        opts = opts || {};\r\n        opts.path = opts.path || \"/socket.io\";\r\n        this.opts = opts;\r\n        installTimerFunctions(this, opts);\r\n        this.reconnection(opts.reconnection !== false);\r\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\r\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\r\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\r\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\r\n        this.backoff = new Backoff({\r\n            min: this.reconnectionDelay(),\r\n            max: this.reconnectionDelayMax(),\r\n            jitter: this.randomizationFactor(),\r\n        });\r\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\r\n        this._readyState = \"closed\";\r\n        this.uri = uri;\r\n        const _parser = opts.parser || parser;\r\n        this.encoder = new _parser.Encoder();\r\n        this.decoder = new _parser.Decoder();\r\n        this._autoConnect = opts.autoConnect !== false;\r\n        if (this._autoConnect)\r\n            this.open();\r\n    }\r\n    reconnection(v) {\r\n        if (!arguments.length)\r\n            return this._reconnection;\r\n        this._reconnection = !!v;\r\n        if (!v) {\r\n            this.skipReconnect = true;\r\n        }\r\n        return this;\r\n    }\r\n    reconnectionAttempts(v) {\r\n        if (v === undefined)\r\n            return this._reconnectionAttempts;\r\n        this._reconnectionAttempts = v;\r\n        return this;\r\n    }\r\n    reconnectionDelay(v) {\r\n        var _a;\r\n        if (v === undefined)\r\n            return this._reconnectionDelay;\r\n        this._reconnectionDelay = v;\r\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\r\n        return this;\r\n    }\r\n    randomizationFactor(v) {\r\n        var _a;\r\n        if (v === undefined)\r\n            return this._randomizationFactor;\r\n        this._randomizationFactor = v;\r\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\r\n        return this;\r\n    }\r\n    reconnectionDelayMax(v) {\r\n        var _a;\r\n        if (v === undefined)\r\n            return this._reconnectionDelayMax;\r\n        this._reconnectionDelayMax = v;\r\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\r\n        return this;\r\n    }\r\n    timeout(v) {\r\n        if (!arguments.length)\r\n            return this._timeout;\r\n        this._timeout = v;\r\n        return this;\r\n    }\r\n    /**\r\n     * Starts trying to reconnect if reconnection is enabled and we have not\r\n     * started reconnecting yet\r\n     *\r\n     * @private\r\n     */\r\n    maybeReconnectOnOpen() {\r\n        // Only try to reconnect if it's the first time we're connecting\r\n        if (!this._reconnecting &&\r\n            this._reconnection &&\r\n            this.backoff.attempts === 0) {\r\n            // keeps reconnection from firing twice for the same reconnection loop\r\n            this.reconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Sets the current transport `socket`.\r\n     *\r\n     * @param {Function} fn - optional, callback\r\n     * @return self\r\n     * @public\r\n     */\r\n    open(fn) {\r\n        if (~this._readyState.indexOf(\"open\"))\r\n            return this;\r\n        this.engine = new Engine(this.uri, this.opts);\r\n        const socket = this.engine;\r\n        const self = this;\r\n        this._readyState = \"opening\";\r\n        this.skipReconnect = false;\r\n        // emit `open`\r\n        const openSubDestroy = on(socket, \"open\", function () {\r\n            self.onopen();\r\n            fn && fn();\r\n        });\r\n        const onError = (err) => {\r\n            this.cleanup();\r\n            this._readyState = \"closed\";\r\n            this.emitReserved(\"error\", err);\r\n            if (fn) {\r\n                fn(err);\r\n            }\r\n            else {\r\n                // Only do this if there is no fn to handle the error\r\n                this.maybeReconnectOnOpen();\r\n            }\r\n        };\r\n        // emit `error`\r\n        const errorSub = on(socket, \"error\", onError);\r\n        if (false !== this._timeout) {\r\n            const timeout = this._timeout;\r\n            // set timer\r\n            const timer = this.setTimeoutFn(() => {\r\n                openSubDestroy();\r\n                onError(new Error(\"timeout\"));\r\n                socket.close();\r\n            }, timeout);\r\n            if (this.opts.autoUnref) {\r\n                timer.unref();\r\n            }\r\n            this.subs.push(() => {\r\n                this.clearTimeoutFn(timer);\r\n            });\r\n        }\r\n        this.subs.push(openSubDestroy);\r\n        this.subs.push(errorSub);\r\n        return this;\r\n    }\r\n    /**\r\n     * Alias for open()\r\n     *\r\n     * @return self\r\n     * @public\r\n     */\r\n    connect(fn) {\r\n        return this.open(fn);\r\n    }\r\n    /**\r\n     * Called upon transport open.\r\n     *\r\n     * @private\r\n     */\r\n    onopen() {\r\n        // clear old subs\r\n        this.cleanup();\r\n        // mark as open\r\n        this._readyState = \"open\";\r\n        this.emitReserved(\"open\");\r\n        // add new subs\r\n        const socket = this.engine;\r\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \r\n        // @ts-ignore\r\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\r\n    }\r\n    /**\r\n     * Called upon a ping.\r\n     *\r\n     * @private\r\n     */\r\n    onping() {\r\n        this.emitReserved(\"ping\");\r\n    }\r\n    /**\r\n     * Called with data.\r\n     *\r\n     * @private\r\n     */\r\n    ondata(data) {\r\n        try {\r\n            this.decoder.add(data);\r\n        }\r\n        catch (e) {\r\n            this.onclose(\"parse error\", e);\r\n        }\r\n    }\r\n    /**\r\n     * Called when parser fully decodes a packet.\r\n     *\r\n     * @private\r\n     */\r\n    ondecoded(packet) {\r\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\r\n        nextTick(() => {\r\n            this.emitReserved(\"packet\", packet);\r\n        }, this.setTimeoutFn);\r\n    }\r\n    /**\r\n     * Called upon socket error.\r\n     *\r\n     * @private\r\n     */\r\n    onerror(err) {\r\n        this.emitReserved(\"error\", err);\r\n    }\r\n    /**\r\n     * Creates a new socket for the given `nsp`.\r\n     *\r\n     * @return {Socket}\r\n     * @public\r\n     */\r\n    socket(nsp, opts) {\r\n        let socket = this.nsps[nsp];\r\n        if (!socket) {\r\n            socket = new Socket(this, nsp, opts);\r\n            this.nsps[nsp] = socket;\r\n        }\r\n        else if (this._autoConnect && !socket.active) {\r\n            socket.connect();\r\n        }\r\n        return socket;\r\n    }\r\n    /**\r\n     * Called upon a socket close.\r\n     *\r\n     * @param socket\r\n     * @private\r\n     */\r\n    _destroy(socket) {\r\n        const nsps = Object.keys(this.nsps);\r\n        for (const nsp of nsps) {\r\n            const socket = this.nsps[nsp];\r\n            if (socket.active) {\r\n                return;\r\n            }\r\n        }\r\n        this._close();\r\n    }\r\n    /**\r\n     * Writes a packet.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    _packet(packet) {\r\n        const encodedPackets = this.encoder.encode(packet);\r\n        for (let i = 0; i < encodedPackets.length; i++) {\r\n            this.engine.write(encodedPackets[i], packet.options);\r\n        }\r\n    }\r\n    /**\r\n     * Clean up transport subscriptions and packet buffer.\r\n     *\r\n     * @private\r\n     */\r\n    cleanup() {\r\n        this.subs.forEach((subDestroy) => subDestroy());\r\n        this.subs.length = 0;\r\n        this.decoder.destroy();\r\n    }\r\n    /**\r\n     * Close the current socket.\r\n     *\r\n     * @private\r\n     */\r\n    _close() {\r\n        this.skipReconnect = true;\r\n        this._reconnecting = false;\r\n        this.onclose(\"forced close\");\r\n    }\r\n    /**\r\n     * Alias for close()\r\n     *\r\n     * @private\r\n     */\r\n    disconnect() {\r\n        return this._close();\r\n    }\r\n    /**\r\n     * Called when:\r\n     *\r\n     * - the low-level engine is closed\r\n     * - the parser encountered a badly formatted packet\r\n     * - all sockets are disconnected\r\n     *\r\n     * @private\r\n     */\r\n    onclose(reason, description) {\r\n        var _a;\r\n        this.cleanup();\r\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\r\n        this.backoff.reset();\r\n        this._readyState = \"closed\";\r\n        this.emitReserved(\"close\", reason, description);\r\n        if (this._reconnection && !this.skipReconnect) {\r\n            this.reconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Attempt a reconnection.\r\n     *\r\n     * @private\r\n     */\r\n    reconnect() {\r\n        if (this._reconnecting || this.skipReconnect)\r\n            return this;\r\n        const self = this;\r\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\r\n            this.backoff.reset();\r\n            this.emitReserved(\"reconnect_failed\");\r\n            this._reconnecting = false;\r\n        }\r\n        else {\r\n            const delay = this.backoff.duration();\r\n            this._reconnecting = true;\r\n            const timer = this.setTimeoutFn(() => {\r\n                if (self.skipReconnect)\r\n                    return;\r\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\r\n                // check again for the case socket closed in above events\r\n                if (self.skipReconnect)\r\n                    return;\r\n                self.open((err) => {\r\n                    if (err) {\r\n                        self._reconnecting = false;\r\n                        self.reconnect();\r\n                        this.emitReserved(\"reconnect_error\", err);\r\n                    }\r\n                    else {\r\n                        self.onreconnect();\r\n                    }\r\n                });\r\n            }, delay);\r\n            if (this.opts.autoUnref) {\r\n                timer.unref();\r\n            }\r\n            this.subs.push(() => {\r\n                this.clearTimeoutFn(timer);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Called upon successful reconnect.\r\n     *\r\n     * @private\r\n     */\r\n    onreconnect() {\r\n        const attempt = this.backoff.attempts;\r\n        this._reconnecting = false;\r\n        this.backoff.reset();\r\n        this.emitReserved(\"reconnect\", attempt);\r\n    }\r\n}\r\n","import { url } from \"./url.js\";\r\nimport { Manager } from \"./manager.js\";\r\nimport { Socket } from \"./socket.js\";\r\n/**\r\n * Managers cache.\r\n */\r\nconst cache = {};\r\nfunction lookup(uri, opts) {\r\n    if (typeof uri === \"object\") {\r\n        opts = uri;\r\n        uri = undefined;\r\n    }\r\n    opts = opts || {};\r\n    const parsed = url(uri, opts.path || \"/socket.io\");\r\n    const source = parsed.source;\r\n    const id = parsed.id;\r\n    const path = parsed.path;\r\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\r\n    const newConnection = opts.forceNew ||\r\n        opts[\"force new connection\"] ||\r\n        false === opts.multiplex ||\r\n        sameNamespace;\r\n    let io;\r\n    if (newConnection) {\r\n        io = new Manager(source, opts);\r\n    }\r\n    else {\r\n        if (!cache[id]) {\r\n            cache[id] = new Manager(source, opts);\r\n        }\r\n        io = cache[id];\r\n    }\r\n    if (parsed.query && !opts.query) {\r\n        opts.query = parsed.queryKey;\r\n    }\r\n    return io.socket(parsed.path, opts);\r\n}\r\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\r\n// namespace (e.g. `io.connect(...)`), for backward compatibility\r\nObject.assign(lookup, {\r\n    Manager,\r\n    Socket,\r\n    io: lookup,\r\n    connect: lookup,\r\n});\r\n/**\r\n * Protocol version.\r\n *\r\n * @public\r\n */\r\nexport { protocol } from \"socket.io-parser\";\r\n/**\r\n * Expose constructors for standalone build.\r\n *\r\n * @public\r\n */\r\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\r\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\r\n"],"mappings":"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"}